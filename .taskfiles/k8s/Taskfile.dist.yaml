---
version: "3"

vars:
  C: '{{ .C | default "biohazard" }}'

tasks:
  wait-job-pending:
    aliases: [waitjob]
    internal: true
    desc: Wait for a job's pod to change its status to pending
    vars:
      NAMESPACE: '{{ or .NAMESPACE (fail "Missing `NAMESPACE` environment variable!") }}'
      JOB_NAME: '{{ or .JOB_NAME (fail "Missing `JOB_NAME` environment variable!") }}'
    cmds:
      - until [[ $(kubectl -n "${NAMESPACE}" get pod -l job-name="${JOB_NAME}" -o jsonpath='{.items[*].status.phase}') == "Pending" ]]; do sleep 1; done

  get-public-ingresses:
    aliases: [gpi]
    desc: |
      TL;dr: Check which ingress resources are exposed publicly via DNS to specific target.
      Long Description: Search through all ingress resources for names of which resources have specific external-dns annotation values.
    vars:
      dns: '{{ or .dns (fail "Missing search query!") }}'
    cmds:
      - kubectl get ingress,svc -A -o yaml | yq -r '.items | map(select(.metadata.annotations."external-dns.alpha.kubernetes.io/target"=="*{{.dns}}*").metadata.name)'

  sops-apply:
    aliases: [sa]
    desc: Decrypt cluster secrets and vars to envsubst local resource, then apply substituted resource.
    vars:
      F: '{{ or .F (fail "Missing file (`f` var) to `envsubst && k apply`!") }}'
      SECRETS_FILE: "{{.ROOT_DIR}}/kube/clusters/{{.C}}/config/secrets.sops.env"
      VARS_FILE: "{{.ROOT_DIR}}/kube/clusters/{{.C}}/config/vars.sops.env"
      FCMD: '{{ .FCMD | default "cat" }}'
    cmds:
      - sops exec-env {{.SECRETS_FILE}} "sops exec-env {{.VARS_FILE}} \"{{.FCMD}} {{.F}} | envsubst | kubectl apply -f -\""

  newapp:
    desc: Copy app folder structure template, substitute APPNAME, and (TODO) prompt user for variables values such as DNS, UID etc.
    vars:
      app: '{{ or .app (fail "Missing `app` variable!") }}'
    cmds:
      - cp -r ./kube/templates/test ./kube/3-deploy/2-apps/{{.app}}
      # lowercase, used for resource names etc
      - grep -lR 'APPNAME' ./kube/3-deploy/2-apps/{{.app}}/ | xargs -I% sed -i 's/${APPNAME}/{{.app}}/g' %
      # uppercase, for variable substitution references e.g. ${APP_DNS_AUTHENTIK}
      - grep -lR 'APPNAME' ./kube/3-deploy/2-apps/{{.app}}/ | xargs -I% sed -i 's/_APPNAME}/_{{.app}}}/g;s/\(_{{.app}}}\)/\U\1/g' %
