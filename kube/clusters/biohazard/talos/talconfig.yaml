clusterName: biohazard
talosVersion: v1.4.5
kubernetesVersion: v1.27.3
endpoint: "https://c.${DNS_CLUSTER}:6443"
allowSchedulingOnMasters: true
dnsDomain: cluster.local

cniConfig:
  name: none

clusterPodNets:
  - "${IP_POD_CIDR_V4}"
clusterSvcNets:
  - "${IP_SVC_CIDR_V4}"

additionalApiServerCertSans:
  - "${IP_CLUSTER_VIP}"
  - "${IP_ROUTER_VLAN_K8S}"
  - "c.${DNS_CLUSTER}"

additionalMachineCertSans:
  - "${IP_CLUSTER_VIP}"
  - "${IP_ROUTER_VLAN_K8S}"
  - "c.${DNS_CLUSTER}"

nodes:

  - hostname: "thunderscreech.${DNS_CLUSTER}"
    ipAddress: "${IP_ROUTER_VLAN_K8S_PREFIX}1"
    controlPlane: true
    installDisk: /dev/vda
    nodeLabels:
      node-restriction.kubernetes.io/nodeType: main
      nodes.home.arpa/type: stable
    nameservers:
      - "${IP_HOME_DNS}"
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        mtu: 1500
        dhcp: false
        addresses:
          - "${IP_ROUTER_VLAN_K8S_PREFIX}1/28"
        routes:
          - network: "${IP_ROUTER_VLAN_K8S_CIDR}"
            metric: 1
          - network: 0.0.0.0/0
            gateway: "${IP_ROUTER_VLAN_K8S}"
        vip:
          ip: "${IP_CLUSTER_VIP}"
      - interface: eth1
        mtu: 9000
        dncp: false
        addresses:
          - "${IP_PVE_CEPH_PREFIX}4/29"
        routes:
          - network: "${IP_PVE_CEPH_CIDR}"
            metric: 1

  - hostname: "humming.${DNS_CLUSTER}"
    ipAddress: "${IP_ROUTER_VLAN_K8S_PREFIX}2"
    controlPlane: true
    installDisk: /dev/vda
    nodeLabels:
      node-restriction.kubernetes.io/nodeType: main
      nodes.home.arpa/type: stable
    nameservers:
      - "${IP_HOME_DNS}"
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        mtu: 1500
        dhcp: false
        addresses:
          - "${IP_ROUTER_VLAN_K8S_PREFIX}2/28"
        routes:
          - network: "${IP_ROUTER_VLAN_K8S_CIDR}"
            metric: 1
          - network: 0.0.0.0/0
            gateway: "${IP_ROUTER_VLAN_K8S}"
        vip:
          ip: "${IP_CLUSTER_VIP}"
      - interface: eth1
        mtu: 9000
        dncp: false
        addresses:
          - "${IP_PVE_CEPH_PREFIX}5/29"
        routes:
          - network: "${IP_PVE_CEPH_CIDR}"
            metric: 1
    patches:
      # required for Talos to initialize i915 VFIO devices
      - |-
        machine:
          install:
            extensions:
              - image: ghcr.io/siderolabs/i915-ucode:20230310

  - hostname: "strato.${DNS_CLUSTER}"
    ipAddress: "${IP_ROUTER_VLAN_K8S_PREFIX}3"
    controlPlane: true
    installDisk: /dev/vda
    nodeLabels:
      node-restriction.kubernetes.io/nodeType: main
      nodes.home.arpa/type: unstable
    nameservers:
      - "${IP_HOME_DNS}"
    disableSearchDomain: true
    networkInterfaces:
      - interface: eth0
        mtu: 1500
        dhcp: false
        addresses:
          - "${IP_ROUTER_VLAN_K8S_PREFIX}3/28"
        routes:
          - network: "${IP_ROUTER_VLAN_K8S_CIDR}"
            metric: 1
          - network: 0.0.0.0/0
            gateway: "${IP_ROUTER_VLAN_K8S}"
        vip:
          ip: "${IP_CLUSTER_VIP}"
      - interface: eth1
        mtu: 9000
        dncp: false
        addresses:
          - "${IP_PVE_CEPH_PREFIX}6/29"
        routes:
          - network: "${IP_PVE_CEPH_CIDR}"
            metric: 1

controlPlane:
  patches:
    - |-
      - op: add
        path: /machine/kubelet/extraArgs
        value:
          feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true,ServerSideApply=true
    - |-
      - op: add
        path: /cluster/apiServer/extraArgs
        value:
          feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true,ServerSideApply=true
    # - |-
    #   - op: add
    #     path: /cluster/controllerManager/extraArgs
    #     value:
    #       node-cidr-mask-size: 22
    - |-
      machine:
        install:
          wipe: true
        network:
          extraHostEntries:
            - ip: "${IP_CLUSTER_VIP}"
              aliases:
                - "c.${DNS_CLUSTER}"
        time:
          disabled: false
          servers:
            - "${IP_ROUTER_VLAN_K8S}"
            - "${IP_ROUTER_LAN}"
          bootTimeout: 2m0s
        kubelet:
          nodeIP:
            validSubnets:
              - "${IP_ROUTER_VLAN_K8S_CIDR}"

    - |-
      cluster:
        allowSchedulingOnMasters: true
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true
        proxy:
          disabled: true
        etcd:
          advertisedSubnets:
            - "${IP_ROUTER_VLAN_K8S_CIDR}"

worker:
  patches:
    - |-
      - op: add
        path: /machine/kubelet/extraArgs
        value:
          feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true,ServerSideApply=true
    # - |-
    #   - op: add
    #     path: /cluster/controllerManager/extraArgs
    #     value:
    #       node-cidr-mask-size: 22
    - |-
      machine:
        install:
          wipe: true
        network:
          extraHostEntries:
            - ip: "${IP_CLUSTER_VIP}"
              aliases:
                - "c.${DNS_CLUSTER}"
        time:
          disabled: false
          servers:
            - "${IP_ROUTER_VLAN_K8S}"
            - "${IP_ROUTER_LAN}"
          bootTimeout: 2m0s
    - |-
      cluster:
        allowSchedulingOnMasters: true
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true
        proxy:
          disabled: true
