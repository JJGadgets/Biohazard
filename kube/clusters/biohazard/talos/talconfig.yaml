---
clusterName: biohazard
talosVersion: v1.5.4
kubernetesVersion: v1.28.2
endpoint: "https://c.${DNS_CLUSTER}:6443"
allowSchedulingOnMasters: true
allowSchedulingOnControlPlanes: true

cniConfig:
  name: none

clusterPodNets:
  - "${IP_POD_CIDR_V4}"
clusterSvcNets:
  - "${IP_SVC_CIDR_V4}"

additionalApiServerCertSans: &san
  - "${IP_CLUSTER_VIP}"
  - "${IP_ROUTER_VLAN_K8S}"
  - "c.${DNS_CLUSTER}"
  - "127.0.0.1" # KubePrism
  - "tailscale-operator-k8s"
  - "tailscale-operator-k8s.${DNS_TS}"

additionalMachineCertSans: *san

nodes:

  - &m720q
    hostname: "ange.${DNS_CLUSTER}" # M720q, i5 6C6T, 64GB RAM, 256GB OS NVMe
    ipAddress: "${IP_ROUTER_VLAN_K8S_PREFIX}1"
    controlPlane: true
    installDiskSelector:
      size: "<= 600GB"
      type: "nvme"
    nameservers: ["${IP_HOME_DNS}"]
    disableSearchDomain: true
    networkInterfaces:
      - &m720q-net
        mtu: 1500 # TODO: switch to 9000 once M720q risers arrive
        dhcp: false
        deviceSelector:
          # onboard I219-V NIC
          driver: "e1000e"
          # hardwareAddr: "*:9a"
          # TODO: switch to Mellanox once M720q risers arrive
          # driver: "mlx4_core"
          # hardwareAddr: "*:6a"
        vlans:
          - &m720q-v58
            vlanId: 58
            mtu: 1500
            dhcp: false
            addresses: ["${IP_ROUTER_VLAN_K8S_PREFIX}1/28"]
            routes:
              - network: "${IP_ROUTER_VLAN_K8S_CIDR}"
                metric: 1
              - network: "0.0.0.0/0"
                gateway: "${IP_ROUTER_VLAN_K8S}"
            vip:
              ip: "${IP_CLUSTER_VIP}"
          # - <<: *vlan-ceph
          #   mtu: 1500
          #   addresses: ["${IP_PVE_CEPH_PREFIX}8/28"]
    machineFiles:
      - &ts
        op: create
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_KUBE_SECRET=""
          TS_STATE_DIR=/var/lib/tailscale
          TS_USERSPACE=false
          TS_ACCEPT_DNS=false
      - &tsNode
        op: append
        path: /var/etc/tailscale/auth.env
        permissions: 0o600
        content: |
          TS_HOSTNAME=ange
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos,tag:ange
          TS_AUTHKEY=${SECRET_TAILSCALE_TALOS_AUTHKEY_ANGE}
          TS_ROUTES=${IP_ROUTER_VLAN_K8S_PREFIX}1/32
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/i915-ucode
            - siderolabs/intel-ucode
            - siderolabs/iscsi-tools
            - siderolabs/tailscale

  - <<: *m720q
    hostname: "charlotte.${DNS_CLUSTER}" # M720q, i5 6C6T, 64GB RAM, 256GB OS NVMe, WiFi M.2 screw stuck LOL
    ipAddress: "${IP_ROUTER_VLAN_K8S_PREFIX}2"
    networkInterfaces:
      - <<: *m720q-net
        vlans:
          - <<: *m720q-v58
            addresses: ["${IP_ROUTER_VLAN_K8S_PREFIX}2/28"]
          # - <<: *vlan-ceph
          #   mtu: 1500
          #   addresses: ["${IP_PVE_CEPH_PREFIX}9/28"]
    machineFiles:
      - *ts
      - <<: *tsNode
        content: |
          TS_HOSTNAME=charlotte
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos,tag:charlotte
          TS_AUTHKEY=${SECRET_TAILSCALE_TALOS_AUTHKEY_CHARLOTTE}
          TS_ROUTES=${IP_ROUTER_VLAN_K8S_PREFIX}2/32

  - <<: *m720q # TODO: this is cp2 but bare metal, only apply after PVE converted to Talos
    hostname: "chise.${DNS_CLUSTER}" # M720q, i3 4C4T, 32GB RAM, 512GB OS NVMe
    ipAddress: "${IP_ROUTER_VLAN_K8S_PREFIX}3"
    networkInterfaces:
      - mtu: 9000 # TODO: switch to 9000 once M720q risers arrive
        dhcp: false
        deviceSelector:
          driver: "mlx4_core"
          hardwareAddr: "*:80"
        vlans:
          - <<: *m720q-v58
            addresses: ["${IP_ROUTER_VLAN_K8S_PREFIX}3/28"]
          # - <<: *vlan-ceph
          #   mtu: 1500
          #   addresses: ["${IP_PVE_CEPH_PREFIX}5/28"]
    machineFiles:
      - *ts
      - <<: *tsNode
        content: |
          TS_HOSTNAME=chise
          TS_EXTRA_ARGS=--accept-routes=false --netfilter-mode=off --snat-subnet-routes=false --advertise-tags=tag:talos,tag:chise
          TS_AUTHKEY=${SECRET_TAILSCALE_TALOS_AUTHKEY_CHISE}
          TS_ROUTES=${IP_ROUTER_VLAN_K8S_PREFIX}3/32

controlPlane:
  patches:
    - &kubeletExtraArgs |-
      - op: add
        path: /machine/kubelet/extraArgs
        value:
          feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,ServerSideApply=true

    - &apiServerExtraArgs |-
      - op: add
        path: /cluster/apiServer/extraArgs
        value:
          feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,ServerSideApply=true

    - &apiServerResources |-
      cluster:
        apiServer:
          resources:
            requests:
              cpu: 200m
              memory: 2Gi
            limits:
              memory: 8Gi

    # - |-
    #   - op: add
    #     path: /cluster/controllerManager/extraArgs
    #     value:
    #       node-cidr-mask-size: 22

    - &machinePatch |-
      machine:
        install:
          bootloader: true
        network:
          extraHostEntries:
            - ip: "${IP_CLUSTER_VIP}"
              aliases:
                - "c.${DNS_CLUSTER}"
            - ip: "${IP_HERCULES}"
              aliases:
                - "hercules.mesh.cilium.io"
            - ip: "${IP_TRUENAS}"
              aliases:
                - "nas.${DNS_MAIN}"
        time:
          disabled: false
          servers:
            - "${IP_ROUTER_LAN}"
          bootTimeout: 2m0s
#         kernel:
#           modules:
#             - name: nct6683
#               parameters: ["force=on"]

    - &kubePrism |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    - &kubeletSubnet |-
      machine:
        kubelet:
          nodeIP:
            validSubnets:
              - "${IP_ROUTER_VLAN_K8S_CIDR}"

    - &etcdSubnet |-
      cluster:
        etcd:
          advertisedSubnets:
            - "${IP_ROUTER_VLAN_K8S_CIDR}"

    - &etcdQuota |-
      cluster:
        etcd:
          extraArgs:
            quota-backend-bytes: 4294967296 # 4 GiB
    # https://www.talos.dev/v1.5/advanced/etcd-maintenance/#space-quota
    # maximum recommended is 8GiB, will resize to 4GiB for now so etcd won't shoot its load all at once

    - &clusterPatch |-
      cluster:
        allowSchedulingOnMasters: true
        allowSchedulingOnControlPlanes: true
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true
        proxy:
          disabled: true

    # - &scheduler |-
    #   cluster:
    #     scheduler:
    #       extraArgs:
    #         config: "/custom/etc/kube-scheduler/config.yaml"
    #       extraVolumes:
    #         - hostPath: "/var/etc/kube-scheduler"
    #           mountPath: "/custom/etc/kube-scheduler"
    #           readonly: true
    #   machine:
    #     files:
    #       - op: create
    #         path: "/var/etc/kube-scheduler/config.yaml"
    #         permissions: 0o400
    #         content: |
    #           apiVersion: kubescheduler.config.k8s.io/v1
    #           kind: KubeSchedulerConfiguration
    #           profiles:
    #             - schedulerName: default-scheduler
    #               pluginConfig:
    #                 - name: PodTopologySpread
    #                   args:
    #                     defaultingType: List
    #                     defaultConstraints:
    #                       - maxSkew: 1
    #                         topologyKey: "kubernetes.io/hostname"
    #                         whenUnsatisfiable: ScheduleAnyway
    #                       - maxSkew: 5
    #                         topologyKey: "topology.kubernetes.io/zone"
    #                         whenUnsatisfiable: ScheduleAnyway

    # Rook Ceph encrypted OSDs
    # TODO: https://github.com/siderolabs/talos/issues/3129
    - &encryptedOSD |-
      machine:
        files:
          - op: overwrite
            path: /etc/lvm/lvm.conf
            permissions: 0o644
            content: |
              backup {
                      backup = 0
                      archive = 0
              }

    # TODO: can't create files outside /var, maybe open FR to whitelist this?
    # - &nfsMountOptions |-
    #   machine:
    #     files:
    #       - op: create
    #         path: /etc/nfsmount.conf
    #         permissions: 0o644
    #         content: |
    #           [ NFSMount_Global_Options ]
    #           nfsvers=4.2
    #           hard=True
    #           noatime=True
    #           nodiratime=True
    #           rsize=131072
    #           wsize=131072
    #           nconnect=8

    # patch containerd for spegel (discard) 
    - &containerdPatches |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            permissions: 0o644
            content: |
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false

worker:
  patches:
    - *kubeletExtraArgs
    - *machinePatch
    - *clusterPatch
    - *kubeletSubnet
    # - *scheduler
    # Rook Ceph encrypted OSDs
    # TODO: https://github.com/siderolabs/talos/issues/3129
    - *encryptedOSD
    # - *nfsMountOptions
    - *containerdPatches