---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: &app gotosocial
  namespace: *app
spec:
  endpointSelector: {}
  ingress:
    # same namespace
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: *app
    # ingress controller
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: ingress
            app.kubernetes.io/instance: ingress-nginx
            app.kubernetes.io/name: ingress-nginx
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
    # Cloudflare Tunnel
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: cloudflare
            app.kubernetes.io/instance: cloudflared
            app.kubernetes.io/name: cloudflared
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
  egress:
    # same namespace
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: *app
    # allow Postgres default cluster
    - toEndpoints:
        - matchLabels:
            cnpg.io/cluster: pg-default
            io.kubernetes.pod.namespace: pg
      toPorts:
        - ports:
            - port: "5432"
    # connect to Rook-Ceph RGW/S3 object store in-cluster
    - toServices:
        - k8sServiceSelector:
            selector:
              matchLabels:
                rook_object_store: "${CLUSTER_NAME_LOWER}"
            namespace: rook-ceph
      toPorts:
        - ports:
            - port: "6953"
              protocol: TCP
            - port: "6953"
              protocol: UDP
            - port: "8080"
              protocol: TCP
            - port: "8080"
              protocol: UDP
    - toEndpoints:
        - matchLabels:
            rook_object_store: "${CLUSTER_NAME_LOWER}"
            io.kubernetes.pod.namespace: rook-ceph
      toPorts:
        - ports:
            - port: "6953"
              protocol: TCP
            - port: "6953"
              protocol: UDP
            - port: "8080"
              protocol: TCP
            - port: "8080"
              protocol: UDP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: &app gotosocial
  namespace: pg
spec:
  endpointSelector:
    matchLabels:
      cnpg.io/cluster: pg-default
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: *app
            io.kubernetes.pod.namespace: *app
      toPorts:
        - ports:
            - port: "5432"
