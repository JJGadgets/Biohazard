---
apiVersion: v1
kind: Service
metadata:
  name: &app matrix-synapse-1
  namespace: ingress
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  type: ExternalName
  externalName: ${DNS_OLD_DOCKER}
  ports:
    - name: http
      port: &port 443
      protocol: TCP
      targetPort: *port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app matrix-synapse-1
  namespace: ingress
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: nginx
  rules:
    - host: &host ${APP_DNS_MATRIX_1}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  number: 443
  tls:
    - hosts:
        - *host
      secretName: long-domain-tls
---
apiVersion: v1
kind: Service
metadata:
  name: &app matrix-synapse-2
  namespace: ingress
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  type: ExternalName
  externalName: ${DNS_OLD_DOCKER}
  ports:
    - name: http
      port: &port 443
      protocol: TCP
      targetPort: *port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app matrix-synapse-2
  namespace: ingress
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: nginx
  rules:
    - host: &host ${APP_DNS_MATRIX_2}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  number: 443
  tls:
    - hosts:
        - *host
      secretName: long-domain-tls
