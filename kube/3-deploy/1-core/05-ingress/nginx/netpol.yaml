---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: ingress-nginx-default
  namespace: ingress
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  ingress:
    # allow kube-apiserver for webhooks
    - fromEntities:
        - kube-apiserver
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
            - port: "443"
              protocol: TCP
            - port: "8443"
              protocol: TCP
    # all ingress-nginx traffic
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: ingress-nginx
    # allow all ingress traffic outside cluster
    - fromEntities:
        - world
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
          rules:
            http:
              - {}
        - ports:
            - port: "443"
              protocol: TCP
            - port: "443"
              protocol: UDP

    # allow traffic from external-proxy-x
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: external-proxy-x
      toPorts:
        - ports:
            - port: "80"
            - port: "443"
            - port: "8443"
    # allow traffic from CloudFlare's cloudflared tunnel
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: cloudflared
            app.kubernetes.io/name: cloudflared
            io.kubernetes.pod.namespace: cloudflare
      toPorts:
        - ports:
            - port: "443"
  egress:
    # allow access to kube-apiserver to get Ingress/etc resources and push updates
    - toEntities:
        - kube-apiserver
    # allow egress to all owned/controlled resources outside cluster
    - toFQDNs:
        - matchPattern: "*.${DNS_MAIN}"
        - matchPattern: "*.${DNS_SHORT}"
    - toCIDRSet:
        - cidr: "${IP_ROUTER_LAN_CIDR}"
      toPorts:
        - ports:
            - port: "80"
            - port: "443"
            - port: "9000"
            - port: "9443"
            - port: "8086"
    # allow ingress-nginx traffic
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: ingress-nginx
    # allow Flux notification-controller ingress
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: flux-system
            app: notification-controller
      toPorts:
        - ports:
            - port: "9292"
              protocol: TCP
            - port: "80"
              protocol: TCP
          rules:
            http:
              - {}
    # allow egress to all pods, except pods in core namespaces that don't need ingress controllers
    - toEndpoints:
        - matchExpressions:
            - key: io.kubernetes.pod.namespace
              operator: NotIn
              values:
                - kube-system
                - flux-system
                - rook-ceph
    # connect to Rook-Ceph RGW/S3 object store in-cluster
    - toServices:
        - k8sServiceSelector:
            selector:
              matchLabels:
                rook_object_store: "${CLUSTER_NAME_LOWER}"
            namespace: rook-ceph
      toPorts:
        - ports:
            - port: "6953"
              protocol: TCP
            - port: "6953"
              protocol: UDP
            - port: "8080"
              protocol: TCP
            - port: "8080"
              protocol: UDP
    - toEndpoints:
        - matchLabels:
            rook_object_store: "${CLUSTER_NAME_LOWER}"
            io.kubernetes.pod.namespace: rook-ceph
      toPorts:
        - ports:
            - port: "6953"
              protocol: TCP
            - port: "6953"
              protocol: UDP
            - port: "8080"
              protocol: TCP
            - port: "8080"
              protocol: UDP
    # allow egress to hubble-ui (2023-05-07: no kube-system netpols planned)
    - toServices:
        - k8sService:
            serviceName: hubble-ui
            namespace: kube-system
    - toEndpoints:
        - matchLabels:
            k8s-app: hubble-ui
            io.kubernetes.pod.namespace: kube-system
    # DNS proxy to kube-dns, DNS L7 visibility
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
          rules:
            dns:
              - matchPattern: "*"
---
apiVersion: "cilium.io/v2"
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: "ingress-nginx-webhook"
spec:
  endpointSelector: {}
  egress:
    # ingress controller webhook admission
    - toServices:
        - k8sService:
            serviceName: ingress-nginx-controller-admission
            namespace: ingress
      toPorts:
        - ports:
            - port: "443"
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: ingress-nginx
            app.kubernetes.io/name: ingress-nginx
            io.kubernetes.pod.namespace: ingress
      toPorts:
        - ports:
            - port: "8443"
