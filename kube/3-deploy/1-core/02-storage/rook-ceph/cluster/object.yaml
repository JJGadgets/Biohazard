---
apiVersion: ceph.rook.io/v1
kind: CephObjectRealm
metadata:
  name: ${CLUSTER_NAME_LOWER}
  namespace: rook-ceph
---
apiVersion: ceph.rook.io/v1
kind: CephObjectZoneGroup
metadata:
  name: ${CLUSTER_NAME_LOWER}
  namespace: rook-ceph
spec:
  realm: "${CLUSTER_NAME_LOWER}"
---
apiVersion: ceph.rook.io/v1
kind: CephObjectZone
metadata:
  name: ${CLUSTER_NAME_LOWER}
  namespace: rook-ceph
spec:
  zoneGroup: "${CLUSTER_NAME_LOWER}"
  metadataPool:
    failureDomain: host
    replicated:
      size: 3
    parameters:
      compression_mode: aggressive
      compression_algorithm: zstd
  dataPool:
    failureDomain: host
    replicated:
      size: 3
    parameters:
      compression_mode: aggressive
      compression_algorithm: zstd
---
apiVersion: ceph.rook.io/v1
kind: CephObjectStore
metadata:
  name: ${CLUSTER_NAME_LOWER}
  namespace: rook-ceph
spec:
  zone:
    name: "${CLUSTER_NAME_LOWER}"
  preservePoolsOnDelete: true
  gateway:
    # sslCertificateRef: radosgw-tls
    port: 6953
    # securePort: 443
    instances: 2
    service:
      annotations:
        "io.cilium/lb-ipam-ips": "${APP_IP_RADOSGW}"
    resources:
      limits:
        memory: "2048Mi"
      requests:
        cpu: "100m"
        memory: "1024Mi"
    priorityClassName: system-cluster-critical
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app rgw
  namespace: rook-ceph
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/server-alias: '*.${APP_DNS_RGW_S3}'
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: nginx
  rules:
    - host: &host ${APP_DNS_RGW_S3}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rook-ceph-rgw-biohazard
                port:
                  number: 6953
  tls:
    - hosts:
        - *host
