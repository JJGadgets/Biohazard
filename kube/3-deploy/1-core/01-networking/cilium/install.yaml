---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeeringPolicy
metadata:
  name: home-opnsense-main
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/os: "linux"
  virtualRouters:
    - localASN: "${ASN_CLUSTER}"
      exportPodCIDR: true
      neighbors:
        - peerAddress: "${IP_ROUTER_VLAN_K8S}"
          peerASN: "${ASN_ROUTER}"
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
    name: cilium
    namespace: kube-system
    annotations:
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
    labels:
        app.kubernetes.io/managed-by: Helm
spec:
    interval: 5m
    chart:
        spec:
            chart: cilium
            version: 1.13.0
            sourceRef:
                kind: HelmRepository
                name: cilium-charts
                namespace: flux-system
            interval: 5m
    install:
        # perform remediation when helm install fails
        remediation:
            retries: 100
    upgrade:
        # perform remediation when helm upgrade fails
        remediation:
            retries: 100
            # remediate the last failure, when no retries remain
            remediateLastFailure: true
        cleanupOnFail: true
    values:
        securityContext:
            privileged: true
        cluster:
            name: Biohazaard
            id: "1"
        tunnel: vxlan
        ipam:
            mode: kubernetes
        bgpControlPlane:
            enabled: true
        loadBalancer:
            algorithm: maglev
            mode: snat
        nodePort:
            enabled: true
            range: 80,32767
        kubeProxyReplacement: strict
        k8sServiceHost: ${IP_CLUSTER_VIP}
        k8sServicePort: 6443
        kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
        install-no-conntrack-iptables-rules: "false"
        operator:
            rollOutPods: true
        autoDirectNodeRoutes: false
        rollOutCiliumPods: true
        localRedirectPolicy: true
        containerRuntime:
            integration: containerd
        hubble:
            peerService:
                clusterDomain: ${DNS_CLUSTER}
            enabled: true
            tls:
                enabled: false
            relay:
                enabled: true
                tls:
                    server:
                        enabled: false
            ui:
                enabled: true
