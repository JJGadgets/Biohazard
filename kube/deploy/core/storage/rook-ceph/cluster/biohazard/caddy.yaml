---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app rgw
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      rgw:
        type: deployment
        replicas: 3
        pod:
          labels:
            rgw: biohazard
            s3.home.arpa/store: "rgw-${CLUSTER_NAME}"
        containers:
          main:
            image: &img
              repository: public.ecr.aws/docker/library/caddy
              tag: 2.8.4-alpine@sha256:af32e97399febea808609119bb21544d0265c58a02836576e32a2d082c262c17
            env: &env
              TZ: "${CONFIG_TZ}"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
                add: ["NET_BIND_SERVICE"]
            resources:
              requests:
                cpu: "10m"
                memory: "128Mi"
              limits:
                cpu: "1000m"
                memory: "1Gi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      rgw:
        controller: rgw
        type: LoadBalancer
        annotations:
          # this is for in-cluster apps only
          io.cilium/internal: "true"
          io.cilium/lb-ipam-ips: "${APP_IP_RGW_HTTPS:=127.0.0.1}"
          coredns.io/hostname: "${APP_DNS_RGW_HTTPS:=rgw}"
        ports:
          http:
            port: 80
            protocol: HTTP
            appProtocol: http
          https:
            port: 443
            protocol: HTTPS
            appProtocol: https
          https2:
            port: 53443
            targetPort: 443
            protocol: HTTPS
            appProtocol: https
    persistence:
      config:
        type: configMap
        name: rgw-config
        globalMounts:
          - subPath: Caddyfile
            path: /etc/caddy/Caddyfile
            readOnly: true
      tls:
        type: secret
        name: short-domain-tls
        defaultMode: 0400
        globalMounts:
          - path: /tls
            readOnly: true
    configMaps:
      config:
        enabled: true
        data:
          Caddyfile: |
            {
              auto_https disable_certs
            }
            ${APP_DNS_RGW_HTTPS:=rgw} {
              tls /tls/tls.crt /tls/tls.key
              reverse_proxy rook-ceph-rgw-biohazard.rook-ceph.svc.cluster.local:6953
            }
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 3333
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/rgw
                    operator: DoesNotExist
