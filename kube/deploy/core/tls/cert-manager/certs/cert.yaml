---
# yaml-language-server: $schema=https://crds.jank.ing/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: short-domain
  namespace: ingress
spec:
  secretName: "short-domain-tls"
  # secretTemplate:
  #   annotations:
  #     reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  #     reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  additionalOutputFormats:
    - type: CombinedPEM
    - type: DER
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  privateKey:
    algorithm: ECDSA
    size: 384
    rotationPolicy: Always
  dnsNames:
    - "${DNS_SHORT}"
    - "*.${DNS_SHORT}"
    - "*.oopsies3.${DNS_SHORT}"
---
# yaml-language-server: $schema=https://crds.jank.ing/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: long-domain
  namespace: ingress
spec:
  secretName: "long-domain-tls"
  # secretTemplate:
  #   annotations:
  #     reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  #     reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  additionalOutputFormats:
    - type: CombinedPEM
    - type: DER
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  privateKey:
    algorithm: ECDSA
    size: 384
    rotationPolicy: Always
  dnsNames:
    - "*.${DNS_MAIN}"
    - "*.oopsies3.${DNS_MAIN}"
---
# yaml-language-server: $schema=https://crds.jank.ing/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: jjgadgets-tech
  namespace: ingress
spec:
  secretName: "jjgadgets-tech-tls"
  # secretTemplate:
  #   annotations:
  #     reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  #     reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  additionalOutputFormats:
    - type: CombinedPEM
    - type: DER
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  privateKey:
    algorithm: ECDSA
    size: 256
    rotationPolicy: Always
  dnsNames:
    - "jjgadgets.tech"
    - "*.jjgadgets.tech"
    - "*.oopsies.jjgadgets.tech"
---
# yaml-language-server: $schema=https://crds.jank.ing/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vpn
  namespace: ingress
spec:
  secretName: "vpn-tls"
  # secretTemplate:
  #   annotations:
  #     reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  #     reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  additionalOutputFormats:
    - type: CombinedPEM
    - type: DER
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  privateKey:
    algorithm: ECDSA
    size: 384
    rotationPolicy: Always
  dnsNames:
    - "${DNS_VPN}"
    - "*.${DNS_VPN}"
---
# yaml-language-server: $schema=https://crds.jank.ing/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: stream
  namespace: ingress
spec:
  secretName: "stream-tls"
  # secretTemplate:
  #   annotations:
  #     reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  #     reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  additionalOutputFormats:
    - type: CombinedPEM
    - type: DER
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  privateKey:
    algorithm: ECDSA
    size: 384
    rotationPolicy: Always
  dnsNames:
    - "${DNS_STREAM}"
    - "*.${DNS_STREAM}"
---
# yaml-language-server: $schema=https://crds.jank.ing/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: home
  namespace: ingress
spec:
  secretName: "home-tls"
  # secretTemplate:
  #   annotations:
  #     reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  #     reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
  additionalOutputFormats:
    - type: CombinedPEM
    - type: DER
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  privateKey:
    algorithm: ECDSA
    size: 384
    rotationPolicy: Always
  dnsNames:
    - "${DNS_HOME}"
    - "*.${DNS_HOME}"
