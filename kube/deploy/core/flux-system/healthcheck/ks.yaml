---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: crds
  namespace: flux-system
  labels:
    kustomization.flux.home.arpa/name: flux
spec:
  path: ./kube/deploy/core/flux-system/blank
  dependsOn: []
  healthChecks:
    - &crds
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: random.fake.ass.shit
    - <<: *crds
      name: replicationsources.volsync.backube
    - <<: *crds
      name: replicationdestinations.volsync.backube
    - <<: *crds
      name: externalsecrets.external-secrets.io
    - <<: *crds
      name: servicemonitors.monitoring.coreos.com
    - <<: *crds
      name: podmonitors.monitoring.coreos.com
    - <<: *crds
      name: ciliumnetworkpolicies.cilium.io
    - <<: *crds
      name: ciliumclusterwidenetworkpolicies.cilium.io
    - <<: *crds
      name: certificates.cert-manager.io
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: storage-ready
  namespace: flux-system
  labels:
    kustomization.flux.home.arpa/name: flux
spec:
  path: ./kube/deploy/core/flux-system/blank
  dependsOn: []
  healthChecks:
    # - kind: HelmRelease
    #   name: rook-ceph-cluster-${CLUSTER_NAME:=biohazard}
    #   namespace: rook-ceph
    - apiVersion: ceph.rook.io/v1
      kind: CephCluster
      name: rook-ceph
      namespace: rook-ceph
    - apiVersion: apps/v1
      kind: Deployment
      name: volsync
      namespace: volsync
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: replicationsources.volsync.backube
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: replicationdestinations.volsync.backube
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: externalsecrets.external-secrets.io
  healthCheckExprs:
    - apiVersion: ceph.rook.io/v1
      kind: CephCluster
      failed: status.ceph.health == 'HEALTH_ERR'
      current: status.ceph.health in ['HEALTH_OK', 'HEALTH_WARN']
