---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app glauth
  namespace: emqx
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      glauth:
        type: deployment
        replicas: 2
        containers:
          main:
            image: &img
              repository: docker.io/glauth/glauth
              tag: v2.3.2@sha256:5112abbb2b5145dadb1a2fed57242ad3718e4af11062d0bb812b50cda6c708ab
            command: ["/app/glauth", "-c", "/config"]
            env: &env
              TZ: "${CONFIG_TZ}"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                memory: "128Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      glauth:
        controller: glauth
        ports:
          ldap-tcp:
            port: 636
            targetPort: 6636
            protocol: TCP
          ldap-udp:
            port: 636
            targetPort: 6636
            protocol: UDP
    persistence:
      config:
        type: secret
        name: emqx-secrets
        globalMounts:
          - subPath: glauth.toml
            path: /config/glauth.toml
      tls:
        type: secret
        name: short-domain-tls
        defaultMode: 0400
        globalMounts:
          - path: /tls
            readOnly: true
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/emqx
                    operator: DoesNotExist
    networkpolicies:
      same-ns:
        controller: glauth
        policyTypes: [Ingress, Egress]
        rules:
          ingress: [from: [{podSelector: {}}]]
          egress: [to: [{podSelector: {}}]]
