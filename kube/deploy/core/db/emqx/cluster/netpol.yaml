---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: "apps-to-emqx"
spec:
  endpointSelector:
    matchLabels:
      db.home.arpa/emqx: "emqx"
  egress:
    - toEndpoints: &emqx
        - matchLabels:
            io.kubernetes.pod.namespace: emqx
            apps.emqx.io/instance: emqx
      toPorts:
        - ports:
            - port: "8883"
              protocol: TCP
    - toEndpoints: *emqx
      icmps: [{}]
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: &app emqx
  namespace: *app
spec:
  endpointSelector: &cluster
    matchLabels:
      apps.emqx.io/instance: emqx
  ingress:
    # EMQX operator (readiness gate)
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: emqx-operator
    # same EMQX cluster
    - fromEndpoints: [*cluster]
    # labelled pods
    - fromEndpoints: &labelled
        - matchExpressions:
            - key: io.kubernetes.pod.namespace
              operator: Exists
            - key: db.home.arpa/emqx
              operator: In
              values: [emqx]
      toPorts:
        - ports:
            - port: "1883"
              protocol: TCP
            - port: "8883"
              protocol: TCP
    - fromEndpoints: *labelled
      icmps: [{}]
    # operator
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: emqx
            app.kubernetes.io/name: emqx-operator
  egress:
    # same cluster
    - toEndpoints: [*cluster]
