---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name "pg-${PG_APP_NAME}"
  namespace: "${PG_APP_NS}"
spec:
  postgresVersion: 16
  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
  instances:
    - name: &instance "${PG_APP_NAME}"
      metadata:
        labels:
          egress.home.arpa/apiserver: "allow"
          egress.home.arpa/r2: "allow"
      replicas: ${PG_REPLICAS:=3}
      dataVolumeClaimSpec:
        storageClassName: "${PG_SC:=local}"
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "${PG_CONFIG_SIZE:=20Gi}"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/instance-set: *instance
  users:
    - name: "${PG_DB_USER:=app}"
      databases: ["${PG_DB_NAME:=app}"]
  backups:
    pgbackrest:
      metadata:
        labels:
          egress.home.arpa/apiserver: "allow"
          egress.home.arpa/r2: "allow"
      configuration: &brcfg
        - secret:
            name: "pg-${PG_APP_NAME}-secrets"
        - secret:
            name: "pg-${PG_APP_NAME}-s3-crunchy"
      global: &brflag
        archive-timeout: "60" # sends WAL archive every X seconds
        compress-type: "bz2"
        compress-level: "9"
        repo1-retention-full-type: "time"
        repo1-retention-full: "5"
        repo1-retention-diff: "30"
        repo1-path: "/pgbackrest/repo1/${PG_APP_NAME}"
        repo2-bundle: "y"
        repo2-block: "y"
        repo2-path: "/${PG_APP_NAME}"
        repo2-s3-uri-style: "path"
        repo2-retention-full-type: "time"
        repo2-retention-full: "2"
        repo2-retention-diff: "7"
        repo2-cipher-type: "aes-256-cbc"
        repo3-bundle: "y"
        repo3-block: "y"
        repo3-s3-uri-style: "path"
        repo3-retention-full-type: "time"
        repo3-retention-full: "5"
        repo3-retention-diff: "30"
      repos:
        - name: "repo1" # NFS
          volume: &nfs
            volumeClaimSpec:
              storageClassName: "pg-${PG_APP_NAME}-wal-nfs"
              volumeName: "pg-${PG_APP_NAME}-wal-nfs"
              accessModes: ["ReadWriteMany"]
              resources:
                requests:
                  storage: "1Mi" # doesn't matter with NFS
          schedules: # more aggressive for NAS (over NFS)
            full: "0 6 * * 1" # every Monday at 06:00
            differential: "0 6 * * 2-6" # every day at 06:00 except Monday
            incremental: "0 1-5,7-23 * * *" # every hour except 06:00
        - name: "repo2" # Cloudflare R2
          s3: &r2
            endpoint: "${SECRET_PGBACKREST_WAL_R2_ENDPOINT}"
            bucket: "${SECRET_PGBACKREST_WAL_R2_BUCKET}"
            region: "us-east-1"
          schedules: # times staggered to avoid NFS schedule causing failed jobs due to locks
            full: "30 6 * * 1" # every Monday at 06:30
            differential: "30 6 * * 0,2-6" # every day at 06:30 except Monday
            incremental: "30 1-5,7-23 * * *" # every hour except 06:30
        - name: "repo3" # Ceph RGW in-cluster
          s3: &rgw
            endpoint: "rook-ceph-rgw-${CLUSTER_NAME}.rook-ceph.svc.cluster.local:6953"
            bucket: "pg-${PG_APP_NAME}"
            region: "us-east-1"
          schedules: # times staggered to avoid NFS schedule causing failed jobs due to locks
            full: "15 6 * * 1" # every Monday at 06:15
            differential: "15 6 * * 0,2-6" # every day at 06:15 except Monday
            incremental: "15 1-5,7-23 * * *" # every hour except 06:15
  # dataSource:
  #   pgbackrest:
  #     stanza: "db"
  #     configuration: *brcfg
  #     global: *brflag
  #     repo:
  #       name: "repo3"
  #       s3: *rgw
  proxy:
    pgBouncer:
      port: 5432
      replicas: 3
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: "pgbouncer"
---
apiVersion: v1
kind: Secret
metadata:
  name: "pg-${PG_APP_NAME}-secrets"
  namespace: "${PG_APP_NS}"
type: Opaque
stringData:
  s3.conf: |
    [global]
    repo2-s3-key=${SECRET_PGBACKREST_WAL_R2_ID}
    repo2-s3-key-secret=${SECRET_PGBACKREST_WAL_R2_KEY}
  encryption.conf: |
    [global]
    repo2-cipher-pass=${SECRET_PGBACKREST_WAL_ENCRYPT}
