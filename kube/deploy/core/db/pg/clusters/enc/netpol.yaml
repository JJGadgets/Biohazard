---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: &pg pg-enc
spec:
  endpointSelector:
    matchLabels:
      db.home.arpa/pg: *pg
  egress:
    - icmps:
        - {}
    # allow pods marked with db label to connect
    - toEndpoints:
        - matchLabels:
            cnpg.io/cluster: *pg
            io.kubernetes.pod.namespace: pg
      toPorts:
        - ports:
            - port: "5432"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: pg-enc
  namespace: &app pg
spec:
  endpointSelector: {}
  ingress:
    # same namespace
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: *app
    # allow pods marked with db label to connect
    - fromEndpoints:
        - matchLabels:
            db: pg-enc
          matchExpressions:
            - key: io.kubernetes.pod.namespace
              operator: Exists
      toPorts:
        - ports:
            - port: "5432"
    - fromEndpoints:
        - matchLabels:
            db.home.arpa/pg: pg-enc
          matchExpressions:
            - key: io.kubernetes.pod.namespace
              operator: Exists
      toPorts:
        - ports:
            - port: "5432"
    # allow operator to connect
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: cnpg
            app.kubernetes.io/instance: cloudnative-pg
            app.kubernetes.io/name: cloudnative-pg
  egress:
    # allow access to apiserver
    - toEntities:
        - kube-apiserver
    - toEntities:
        - host
      toPorts:
        - ports:
            - port: "6443"
    # same namespace
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: *app
    # CNPG webhook
    - toServices:
        - k8sService:
            serviceName: cnpg-webhook-service
            namespace: cnpg
      toPorts:
        - ports:
            - port: "443"
    # connect to operator
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: cnpg
            app.kubernetes.io/instance: cloudnative-pg
            app.kubernetes.io/name: cloudnative-pg
    # connect to Cloudflare R2 for S3 WAL archiving
    - toFQDNs:
        - matchPattern: "*.r2.cloudflarestorage.com"
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
            - port: "443"
              protocol: UDP
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: pg-enc-dump-local
  namespace: pg
spec:
  endpointSelector:
    matchLabels:
      postgresql: &pg pg-enc
      app.kubernetes.io/instance: *pg
      app.kubernetes.io/name: pg-dump-local
  ingress:
    - {}
  egress:
    - toCIDRSet:
        - cidr: "${IP_TRUENAS}/32"
      toPorts:
        - ports:
            - port: "2049"
              protocol: TCP
            - port: "2049"
              protocol: UDP
    - toServices:
        - k8sServiceSelector:
            selector:
              matchLabels:
                postgresql: *pg
      toPorts:
        - ports:
            - port: "5432"
              protocol: TCP
            - port: "5432"
              protocol: UDP
    - toEndpoints:
        - matchLabels:
            postgresql: *pg
      toPorts:
        - ports:
            - port: "5432"
              protocol: TCP
            - port: "5432"
              protocol: UDP
