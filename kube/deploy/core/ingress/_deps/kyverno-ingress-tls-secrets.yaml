---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: "ingress-tls-secrets"
spec:
  background: true
  generateExisting: true
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: "sync-secrets-long-domain-tls"
      match: &m
        any:
          - resources:
              kinds: ["Ingress"]
      preconditions:
        any:
          - &c
            key: "{{ request.object.spec.tls[].hosts[] }}"
            operator: AnyIn
            value: "*${DNS_MAIN}"
      generate: &g
        apiVersion: v1
        kind: Secret
        name: "long-domain-tls"
        namespace: "{{ request.object.metadata.namespace }}"
        synchronize: true
        clone:
          name: "long-domain-tls"
          namespace: "ingress"
    # TODO: add cleanup of cert-manager annotations and labels either in generate rule or in a new rule after sync rule

    - name: "sync-secrets-vpn-tls"
      match: *m
      preconditions:
        any:
          - <<: *c
            value: "*${DNS_VPN}"
      generate:
        <<: *g
        name: "vpn-tls"
        clone:
          name: "vpn-tls"
    - name: "sync-secrets-stream-tls"
      match: *m
      preconditions:
        any:
          - <<: *c
            value: "*${DNS_STREAM}"
      generate:
        <<: *g
        name: "stream-tls"
        clone:
          name: "stream-tls"
    - name: "sync-secrets-me-tls"
      match: *m
      preconditions:
        any:
          - <<: *c
            value: "*${DNS_ME}"
      generate:
        <<: *g
        name: "me-tls"
        clone:
          name: "me-tls"
    - name: "sync-secrets-home-tls"
      match: *m
      preconditions:
        any:
          - <<: *c
            value: "*${DNS_HOME}"
      generate:
        <<: *g
        name: "home-tls"
        clone:
          name: "home-tls"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: "ingress-tls-secretname"
spec:
  background: true
  generateExisting: true
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: "secretName-long-domain-tls"
      match: &m
        any:
          - resources:
              kinds: ["Ingress"]
      mutate:
        targets: &t
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            name: "{{ request.object.metadata.name }}"
            name: "{{ request.object.metadata.namespace }}"
        foreach:
          - list: &l "request.object.spec.tls[]"
            preconditions:
              all:
                - &c
                  key: "{{element.hosts[]}}"
                  operator: AllIn
                  value: "*${DNS_MAIN}"
            patchesJson6902: |-
              - path: /spec/tls/{{elementIndex}}/secretName
                op: add
                value: "long-domain-tls"
    - name: "secretName-vpn-tls"
      match: *m
      mutate:
        targets: *t
        foreach:
          - list: *l
            preconditions:
              all:
                - <<: *c
                  value: "*${DNS_VPN}"
            patchesJson6902: |-
              - path: /spec/tls/{{elementIndex}}/secretName
                op: add
                value: "vpn-tls"
    - name: "secretName-stream-tls"
      match: *m
      mutate:
        targets: *t
        foreach:
          - list: *l
            preconditions:
              all:
                - <<: *c
                  value: "*${DNS_STREAM}"
            patchesJson6902: |-
              - path: /spec/tls/{{elementIndex}}/secretName
                op: add
                value: "stream-tls"
    - name: "secretName-me-tls"
      match: *m
      mutate:
        targets: *t
        foreach:
          - list: *l
            preconditions:
              all:
                - <<: *c
                  value: "*${DNS_ME}"
            patchesJson6902: |-
              - path: /spec/tls/{{elementIndex}}/secretName
                op: add
                value: "me-tls"
    - name: "secretName-home-tls"
      match: *m
      mutate:
        targets: *t
        foreach:
          - list: *l
            preconditions:
              all:
                - <<: *c
                  value: "*${DNS_HOME}"
            patchesJson6902: |-
              - path: /spec/tls/{{elementIndex}}/secretName
                op: add
                value: "home-tls"
