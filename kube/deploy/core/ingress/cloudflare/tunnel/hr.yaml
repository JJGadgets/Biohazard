---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: cloudflared
  namespace: cloudflare
spec:
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      type: daemonset
    automountServiceAccountToken: false
    podLabels:
      prom.home.arpa/kps: "allow"
    image:
      repository: cloudflare/cloudflared
      tag: 2025.2.0@sha256:6e2df069aaf5a8c0bf304b674ff31c0ed07c974534b4303a8c6e57d93c6c9224
    args: ['tunnel', '--config', '/etc/cloudflared/config.yaml', '--metrics', '0.0.0.0:9090', 'run']
    service:
      main:
        ports:
          http:
            port: 9090
    serviceMonitor:
      main:
        enabled: true
    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflared-config
        mountPath: /etc/cloudflared/config.yaml
        subPath: config.yaml
        readOnly: true
      credentials:
        enabled: true
        type: secret
        name: cloudflared-credentials
        mountPath: /etc/cloudflared/credentials.json
        subPath: credentials.json
        readOnly: true
    configMaps:
      config:
        enabled: true
        data:
          config.yaml: |
            tunnel: "${SECRET_CLOUDFLARE_TUNNEL_ID}"
            credentials-file: /etc/cloudflared/credentials.json
            no-autoupdate: true

            ingress:
              - hostname: "cftest.${DNS_SHORT}"
                service: hello_world

              - hostname: "*"
                path: "^/metrics"
                service: http://default-backend.ingress.svc.cluster.local:80

              - hostname: "${APP_DNS_FLUX_WEBHOOK}"
                service: "http://webhook-receiver.flux-system.svc.cluster.local:80"

              - hostname: "social.jjgadgets.tech"
                service: http://gotosocial.gotosocial.svc.cluster.local.:8080
                #service: https://gotosocial.gotosocial.svc.cluster.local.:8080
                #originRequest:
                #  originServerName: "social.jjgadgets.tech"

              - hostname: "${APP_DNS_PIPED_BACKEND}"
                path: "^/webhooks"
                service: http://piped-backend.piped.svc.cluster.local:8080

              - hostname: "${APP_DNS_HEADSCALE}"
                service: https://headscale.headscale.svc.cluster.local.:8080
                originRequest:
                  originServerName: "${APP_DNS_HEADSCALE}"

              - hostname: "*.${DNS_SHORT}"
                service: https://nginx-external-controller.ingress.svc.cluster.local:443
                originRequest:
                  originServerName: "ingress.${DNS_SHORT}"

              - hostname: "${DNS_SHORT}"
                service: https://nginx-public-controller.ingress.svc.cluster.local:443
                originRequest:
                  originServerName: "${DNS_SHORT}"

              - hostname: "${APP_DNS_AUTHENTIK}"
                service: https://nginx-external-controller.ingress.svc.cluster.local:443
                originRequest:
                  originServerName: "${APP_DNS_AUTHENTIK}"

              - hostname: "*.${DNS_MAIN}"
                service: https://nginx-public-controller.ingress.svc.cluster.local:443
                originRequest:
                  originServerName: "ingress.${DNS_MAIN}"

              - service: http://default-backend.ingress.svc.cluster.local:80
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ${DNS_SHORT_CF}
    external-dns.alpha.kubernetes.io/target: ${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
  name: cloudflared-external-dns-short
  namespace: cloudflare
spec:
  type: ExternalName
  externalName: ${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ${DNS_MAIN_CF}
    external-dns.alpha.kubernetes.io/target: ${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
  name: cloudflared-external-dns-long
  namespace: cloudflare
spec:
  type: ExternalName
  externalName: ${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
