---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: apiserver
  namespace: default
spec:
  endpointSelector:
    matchLabels:
      component: apiserver
      provider: kubernetes
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-apiserver
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/apiserver: allow
  egress:
    - toEntities:
        - kube-apiserver
    - toEntities:
        - host
      toPorts:
        - ports:
            - port: "6443"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-host
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/host: "allow"
  egress:
    - toEntities:
        - "host"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-world
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/world: allow
  egress:
    - toEntities:
        - world
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-internet
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/internet: allow
  egress:
    - toCIDRSet:
        - cidr: "0.0.0.0/0"
          except:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-internet-https
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/internet-https: allow
  egress:
    - toCIDRSet:
        - cidr: "0.0.0.0/0"
          except:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
      toPorts:
        - ports:
            - port: "443"
              protocol: ANY
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-world-https
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/world-https: allow
  egress:
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
            - port: "443"
              protocol: UDP
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-home-dns
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/home-dns: allow
  egress:
    - toCIDRSet:
        - cidr: "${IP_HOME_DNS}/32"
      toPorts:
        - ports:
            - port: "53"
              protocol: ANY
          rules:
            dns:
              - matchPattern: "*"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-ntp
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/world-ntp: allow
  egress:
    - toEntities:
        - "world"
      toPorts:
        - ports:
            - port: "123"
              protocol: "UDP"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-dlna
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/dlna: allow
  egress:
    - toCIDR:
        - "239.255.255.250/32"
      toPorts:
        - ports:
            - port: "1900"
              protocol: "UDP"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-cloudflare-r2
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/r2: allow
  egress:
    - toFQDNs: &dns
        - matchPattern: "*.r2.cloudflarestorage.com"
      toPorts:
        - ports:
            - port: "443"
              protocol: "TCP"
            - port: "443"
              protocol: "UDP"
    - toEndpoints:
        - matchLabels:
            "k8s:io.kubernetes.pod.namespace": kube-system
            "k8s:k8s-app": kube-dns
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: "ANY"
          rules:
            dns: *dns
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-github
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/github: allow
  egress:
    - toFQDNs: &dns
        - matchPattern: "github.com"
        - matchPattern: "*.github.com"
        - matchPattern: "*.github.dev"
        - matchPattern: "*.github.io"
        - matchPattern: "*.ghcr.io"
        - matchPattern: "*.githubusercontent.com"
      toPorts:
        - ports:
            - port: "443"
              protocol: "TCP"
            - port: "443"
              protocol: "UDP"
    - toEndpoints:
        - matchLabels:
            "k8s:io.kubernetes.pod.namespace": kube-system
            "k8s:k8s-app": kube-dns
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: "ANY"
          rules:
            dns: *dns
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-discord
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/discord: allow
  egress:
    - toFQDNs: &dns
        - matchPattern: "discord.com"
        - matchPattern: "*.discord.com"
        - matchPattern: "discordapp.com"
        - matchPattern: "*.discordapp.com"
        - matchPattern: "discord.gg"
        - matchPattern: "*.discord.gg"
        - matchPattern: "gateway.discord.gg"
      toPorts:
        - ports:
            - port: "443"
              protocol: "TCP"
            - port: "443"
              protocol: "UDP"
    - toEndpoints:
        - matchLabels:
            "k8s:io.kubernetes.pod.namespace": kube-system
            "k8s:k8s-app": kube-dns
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: "ANY"
          rules:
            dns: *dns
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-pypi
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/pypi: allow
  egress:
    - toFQDNs: &dns
        - matchPattern: "pypi.org"
      toPorts:
        - ports:
            - port: "443"
              protocol: "TCP"
            - port: "443"
              protocol: "UDP"
    - toEndpoints:
        - matchLabels:
            "k8s:io.kubernetes.pod.namespace": kube-system
            "k8s:k8s-app": kube-dns
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: "ANY"
          rules:
            dns: *dns
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-mullvad
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/mullvad: allow
  egress:
    - # SOCKS5 proxy
      toCIDRSet:
        - cidr: "10.8.0.1/32"
        - cidr: "10.64.0.1/32"
        - cidr: "10.124.0.0/23"
      toPorts:
        - ports:
            - port: "1080"
              protocol: "TCP"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-lan
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/lan: "allow"
  egress:
    - toCIDRSet:
        - cidr: "${IP_ROUTER_LAN_CIDR}"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-user1
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/wg-user1: "allow"
  egress:
    - toCIDRSet:
        - cidr: "${IP_WG_USER_1_V4}"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: labelled-allow-egress-wg-guest
spec:
  endpointSelector:
    matchLabels:
      egress.home.arpa/wg-guest: "allow"
  egress:
    - toCIDRSet:
        - cidr: "${IP_WG_GUEST_V4}"
