---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: &app tailscale
  namespace: *app
spec:
  endpointSelector: {}
  ingress:
    # same namespace
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: *app
  egress:
    - toEntities:
        - world
    # kube-apiserver
    - toEntities:
        - kube-apiserver
    - toEntities: 
        - host
        - remote-node
      toPorts:
        - ports:
            - port: "6443"
    # allow access to k8s-gateway
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: "dns"
            app.kubernetes.io/name: "k8s-gateway"
    # allow access to Tailscale-exposed pods
    - toServices:
        - k8sServiceSelector:
            selector:
              matchExpressions:
                - key: tailscale.com/expose
                  operator: Exists
    - toEndpoints:
        - matchExpressions:
            - key: tailscale.com/expose
              operator: Exists
            - key: io.kubernetes.pod.namespace
              operator: Exists
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: "cilium.io/v2"
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: "ingress-from-tailscale"
spec:
  description: "Allow pods that require ingress to allow traffic from Tailscale, no port restrictions"
  endpointSelector:
    matchExpressions:
      - key: tailscale.com/expose
        operator: Exists
      - key: io.kubernetes.pod.namespace
        operator: Exists
  ingress:
    # ingress controller webhook admission
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: "tailscale"