---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fluentbit
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      fluentbit:
        type: daemonset
        containers:
          main:
            image: &img
              repository: cr.fluentbit.io/fluent/fluent-bit
              tag: 3.2.2@sha256:b7a2b9ee1958607da9a16b0efeb24a70a43c5b7e91dbabca4dc02e916aadb914
            args: ["--config=/config/fluent-bit.yaml"]
            env: &env
              TZ: "${CONFIG_TZ}"
              KUBE_NODE_IP:
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "1"
                memory: "128Mi"
            #probes: # TODO: HTTP healthchecks via health API
            #  liveness:
            #    enabled: true
            #  readiness:
            #    enabled: true
            #  #startup:
            #  #  enabled: true
    #service:
    #  fluentbit:
    #    controller: fluentbit
    #    ports:
    #      http:
    #        port: 8080
    #        protocol: HTTP
    #        appProtocol: http
    persistence:
      config:
        type: configMap
        name: fluentbit-config
      logs-containers: # normal Talos disk mount
        type: hostPath
        hostPath: &path "/var/log/containers"
        globalMounts:
          - path: *path
      logs-pods: # jank tmpfs bind mount from /run on Talos
        type: hostPath
        hostPath: &path "/var/log/pods"
        globalMounts:
          - path: *path
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsUser: &uid 0 # logs are stored as root
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/fluentbit
                    operator: DoesNotExist
