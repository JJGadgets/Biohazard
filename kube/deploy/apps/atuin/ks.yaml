---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: atuin-app
  namespace: flux-system
  labels:
    wait.flux.home.arpa/disabled: "true"
spec:
  path: ./kube/deploy/apps/atuin/app
  dependsOn:
    - name: atuin-pvc
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: atuin-db
  namespace: flux-system
spec:
  path: ./kube/deploy/core/db/pg/clusters/template
  dependsOn:
    - name: 1-core-db-pg-app
    - name: 1-core-storage-democratic-csi-local-hostpath
    - name: 1-core-secrets-es-k8s
  postBuild:
    substitute:
      PG_APP_NAME: &app "atuin"
      PG_APP_NS: *app
      PG_DB_NAME: *app
      PG_DB_USER: *app
      PG_REPLICAS: "3"
      PG_SC: "local"
      PG_CONFIG_VERSION: "15.2-11"
      PG_CONFIG_SIZE: "20Gi"
  patches:
    - # remove Cloudflare R2 backups, NAS and RGW is enough
      patch: |-
        - op: remove
          path: /spec/backups/pgbackrest/repos/2
      target:
        group: postgres-operator.crunchydata.com
        kind: PostgresCluster
# TODO: switch to SQLite once Atuin server supports it, since downtime from stuck PVCs and some data loss within a day is acceptable, an `atuin sync` will bring everything back up to speed and the client isn't reliant on the sync server for basic functionality anyway
# https://github.com/atuinsh/atuin/issues/1158 https://github.com/atuinsh/atuin/discussions/1161
# ---
# apiVersion: kustomize.toolkit.fluxcd.io/v1
# kind: Kustomization
# metadata:
#   name: atuin-pvc
#   namespace: flux-system
# spec:
#   path: ./kube/deploy/core/storage/volsync/template
#   targetNamespace: "atuin"
#   dependsOn:
#     - name: 1-core-storage-volsync-app
#     - name: 1-core-storage-rook-ceph-cluster
#   postBuild:
#     substitute:
#       PVC: "atuin-data"
#       SIZE: "10Gi"
#       RUID: &uid "${APP_UID_ATUIN}"
#       RGID: *uid
#       RFSG: *uid
