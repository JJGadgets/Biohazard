---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-4.0.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app go-discord-modtools
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      go-discord-modtools:
        # type: statefulset
        type: deployment
        replicas: 1
        pod:
          labels:
            egress.home.arpa/discord: "allow"
        containers:
          main:
            image: &img
              repository: "ghcr.io/tyzbit/go-discord-modtools"
              tag: "v0.3.0@sha256:cff0e5d3b835f0701557ca239df642fa44a1ac207dc27c6d25b0dac689591f39"
            env: &env
              TZ: "${CONFIG_TZ}"
            envFrom: &envFrom
              - secretRef:
                  name: go-discord-modtools-secrets
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "50m"
              limits:
                memory: "512Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      go-discord-modtools:
        controller: go-discord-modtools
        ports:
          http:
            port: 8080
            protocol: HTTP
            appProtocol: http
    persistence:
      data:
        existingClaim: go-discord-modtools-data
        globalMounts:
          - subPath: data
            path: /var/go-discord-modtools
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      hostAliases:
        - ip: "${APP_IP_AUTHENTIK:=127.0.0.1}"
          hostnames: ["${APP_DNS_AUTHENTIK:=authentik}"]
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid ${APP_UID_GO_DISCORD_MODTOOLS:=1000}
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/go-discord-modtools
                    operator: DoesNotExist
