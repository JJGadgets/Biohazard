---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app go-discord-modtools
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.5.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        # type: statefulset
        type: deployment
        replicas: 1
        pod:
          labels:
            db.home.arpa/pg: "pg-default"
            egress.home.arpa/discord: "allow"
        containers:
          main:
            image: &img
              repository: "ghcr.io/tyzbit/go-discord-modtools"
              tag: "0.2.1"
            env:
              TZ: "${CONFIG_TZ}"
              DB_TYPE: "postgresql"
              DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: &pg "pg-default-pguser-godiscordmodtools"
                    key: "pgbouncer-host"
              DB_PORT:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: "pgbouncer-port"
              DB_NAME:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: "dbname"
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: "user"
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: "password"
            envFrom:
              - secretRef:
                  name: "go-discord-modtools-secrets"
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "50m"
              limits:
                memory: "512Mi"
    service:
      main:
        ports:
          http:
            port: 8080
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 49726
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/go-discord-modtools"
                    operator: "DoesNotExist"
