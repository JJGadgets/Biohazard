---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.6.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: "allow"
        containers:
          main:
            image:
              repository: "ghcr.io/onedr0p/home-assistant"
              tag: "2024.2.3@sha256:4880575480641e0f83618de45c27dd75ff9d413f092523a75b7ec1e825d22b1b"
            env:
              TZ: "${CONFIG_TZ}"
            #envFrom:
            #  - secretRef:
            #      name: "home-assistant-secrets"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "3000m"
                memory: "1Gi"
      vscode:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: "allow"
        containers:
          main:
            image:
              repository: "ghcr.io/coder/code-server"
              tag: "4.22.0@sha256:0976d5802c2cc2bebaddc8325209b551abf90454822171e4d92bef647bad7b48"
            command: ["dumb-init", "/usr/bin/code-server"]
            args:
              - "--auth"
              - "none"
              - "--disable-telemetry"
              - "--user-data-dir"
              - "/home/coder/.vscode"
              - "--extensions-dir"
              - "/home/coder/.vscode"
              - "--bind-addr"
              - "0.0.0.0:8080"
              - "--port"
              - "8080"
              - "/home/coder"
            env:
              TZ: "${CONFIG_TZ}"
            securityContext: *sc
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "500m" # I previously had a code-server that would eat cores
                memory: "1Gi"
    service:
      main:
        ports:
          http:
            port: 8123
      vscode:
        primary: false
        controller: "vscode"
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        primary: true
        className: "nginx-internal"
        hosts:
          - host: &host "${APP_DNS_HOME_ASSISTANT}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls: &tls
          - hosts: [*host]
      vscode:
        enabled: true
        primary: false
        className: "tailscale"
        hosts:
          - host: &host "hass-edit.${DNS_TS}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: vscode
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      config:
        enabled: true
        existingClaim: "home-assistant-data"
        advancedMounts:
          main:
            main:
              - subPath: "config"
                path: "/config"
                readOnly: false
          vscode:
            main:
              - path: "/home/coder"
                readOnly: false
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: "tmp"
            path: "/tmp"
            readOnly: false
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid ${APP_UID_HOME_ASSISTANT}
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/home-assistant"
                    operator: "DoesNotExist"
