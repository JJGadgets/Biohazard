---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app kanidm
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.5.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/world: "allow"
            ingress.home.arpa/cluster: "allow"
        containers:
          main:
            image: &img
              repository: "docker.io/kanidm/server"
              tag: "1.1.0-rc.16@sha256:3d676ffb429f8367e01b4b9a9e8e88410ee4684891446fc9ab2b2bf2481e31c6"
            env:
              TZ: "${CONFIG_TZ}"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
                memory: "128Mi"
              limits:
                cpu: "3000m"
                memory: "6000Mi"
        initContainers:
          01-init-kanidm-admin-password:
            command:
              - /bin/sh
              - -c
              - "[ -s /data/kanidm.db ] || /sbin/kanidmd recover-account -c /data/server.toml admin"
            image: *img
            securityContext: *sc
            resources:
              requests:
                cpu: "10m"
              limits:
                memory: "150Mi"
    service:
      main:
        enabled: true
        primary: true
        controller: main
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          coredns.io/hostname: "${APP_DNS_KANIDM}"
          "io.cilium/lb-ipam-ips": "${APP_IP_KANIDM}"
        ports:
          http:
            enabled: true
            port: 443
            targetPort: 8443
            protocol: HTTPS
          ldap-tcp:
            enabled: true
            port: 636
            targetPort: 3636
            protocol: TCP
          ldap-udp:
            enabled: true
            port: 636
            targetPort: 3636
            protocol: UDP
    persistence:
      config:
        enabled: true
        type: configMap
        name: "kanidm-config"
        globalMounts:
          - subPath: "server.toml"
            path: "/data/server.toml"
            readOnly: true
      data:
        enabled: true
        existingClaim: "kanidm-data"
        globalMounts:
          - subPath: "data"
            path: "/data"
      tls:
        enabled: true
        type: secret
        name: "short-domain-tls"
        defaultMode: 0400
        globalMounts:
          - subPath: "tls.crt"
            path: "/tls/fullchain.pem"
            readOnly: true
          - subPath: "tls.key"
            path: "/tls/privkey.pem"
            readOnly: true
    configMaps:
      config:
        enabled: true
        data:
          server.toml: |-
            domain = "${APP_DNS_KANIDM}"
            origin = "https://${APP_DNS_KANIDM}"
            tls_chain = "/tls/fullchain.pem"
            tls_key = "/tls/privkey.pem"
            role = "WriteReplica"
            log_level = "verbose"
            bindaddress = "[::]:8443"
            ldapbindaddress = "[::]:3636"
            trust_x_forward_for = true
            db_path = "/data/kanidm.db"
            db_fs_type = "other"
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid ${APP_UID_KANIDM}
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/kanidm"
                    operator: "DoesNotExist"
