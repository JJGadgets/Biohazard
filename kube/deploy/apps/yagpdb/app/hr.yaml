---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app yagpdb
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.6.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-public: "allow"
            db.home.arpa/pg: "pg-default"
            egress.home.arpa/discord: "allow"
        containers:
          main:
            image: &img
              repository: "jank.ing/jjgadgets/yagpdb"
              tag: "2.35.1@sha256:eaf08bd13e243c1da93f62c123027bbc8c2f249bace26f89908af5bc42ea5934"
            env:
              TZ: "${CONFIG_TZ}"
              YAGPDB_HOST: "${APP_DNS_YAGPDB}"
              YAGPDB_REDIS: "localhost:6379"
              YAGPDB_PQHOST:
                valueFrom:
                  secretKeyRef:
                    name: "pg-default-pguser-yagpdb"
                    key: "pgbouncer-host"
              YAGPDB_PQDB:
                valueFrom:
                  secretKeyRef:
                    name: "pg-default-pguser-yagpdb"
                    key: "dbname"
              YAGPDB_PQUSERNAME:
                valueFrom:
                  secretKeyRef:
                    name: "pg-default-pguser-yagpdb"
                    key: "user"
              YAGPDB_PQPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: "pg-default-pguser-yagpdb"
                    key: "password"
            envFrom:
              - secretRef:
                  name: "yagpdb-secrets"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
                memory: "128Mi"
              limits:
                cpu: "3000m"
                memory: "6000Mi"
          redis:
            image:
              repository: "public.ecr.aws/docker/library/redis"
              tag: "7.2.4-bookworm@sha256:8482ee910acbcd8f31c5a08329e3903dbd2a018e2837897bfaf9bafb80b494b2"
            command: ["redis-server", "--save", "''", "--appendonly", "no", "--port", "6379", "--bind", "127.0.0.1"]
            securityContext: *sc
            resources:
              requests:
                cpu: "10m"
                memory: "32Mi"
              limits:
                cpu: "1000m"
                memory: "512Mi"
    service:
      main:
        ports:
          http:
            port: 5000
    ingress:
      main:
        enabled: true
        primary: true
        className: "nginx-public"
        annotations:
          external-dns.alpha.kubernetes.io/target: "${DNS_CF}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host "${APP_DNS_YAGPDB}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      config:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: "soundboard"
            path: "/app/soundboard"
            readOnly: false
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid ${APP_UID_YAGPDB}
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/yagpdb"
                    operator: "DoesNotExist"
