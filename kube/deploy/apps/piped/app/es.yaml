---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "external-secrets-kubernetes-provider"
  namespace: "piped"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["*"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["selfsubjectrulesreviews"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: &name "external-secrets-kubernetes-provider"
  namespace: "piped"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: *name
subjects:
  - kind: "ServiceAccount"
    name: *name
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "external-secrets-kubernetes-provider"
  namespace: "piped"
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: "kubernetes-piped"
  namespace: &ns "piped"
spec:
  provider:
    kubernetes:
      remoteNamespace: *ns
      server:
        url: "https://kubernetes.default.svc"
        caProvider:
          type: "ConfigMap"
          name: "kube-root-ca.crt"
          key: "ca.crt"
      auth:
        serviceAccount:
          name: "external-secrets-kubernetes-provider"
---
# yaml-language-server: $schema=https://crds.jank.ing/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name piped-secrets
  namespace: piped
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: "SecretStore"
    name: "kubernetes-piped"
  dataFrom:
    - extract:
        key: "pg-default-pguser-piped"
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
    name: *name
    template:
      type: Opaque
      data:
        # subscriptions fetch cron
        PGHOST: 'pg-default-pgbouncer.pg.svc.cluster.local'
        PGUSER: '{{ .user }}'
        PGPASSWORD: '{{ .password }}'
        PGDATABASE: '{{ .dbname }}'
        # backend
        config.properties: |
          PORT: 8080
          HTTP_WORKERS: 2
          PROXY_PART: https://${APP_DNS_PIPED}/ytproxy
          API_URL: https://${APP_DNS_PIPED}/server
          FRONTEND_URL: https://${APP_DNS_PIPED}
          COMPROMISED_PASSWORD_CHECK: true
          DISABLE_REGISTRATION: true
          FEED_RETENTION: 365
          hibernate.connection.url: '{{ index . "pgbouncer-jdbc-uri" | replace "svc:" "svc.cluster.local:" }}'
          hibernate.connection.username: '{{ .user }}'
          hibernate.connection.password: '{{ .password }}'
          SENTRY_DSN: ""
          MATRIX_SERVER: ""
