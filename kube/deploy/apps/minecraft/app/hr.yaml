---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app minecraft
  namespace: *app
spec:
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: "deployment"
        replicas: 1
        pod:
          labels:
            egress.home.arpa/world: "true"
            egress.home.arpa/world-https: "true"
            tailscale.com/expose: "true"
        containers:
          main:
            image: &image
              repository: "ghcr.io/jjgadgets/minecraft-server"
              tag: "java17-graalvm"
            env:
              TZ: "${CONFIG_TZ}"
              MEMORY: "2048M"
              EULA: "TRUE"
              TYPE: "FABRIC"
              VERSION: "1.20.1"
              FABRIC_LOADER_VERSION: "0.14.23"
              MODRINTH_ALLOWED_VERSION_TYPE: "release"
              MODRINTH_DOWNLOAD_DEPENDENCIES: "required"
              MODRINTH_PROJECTS: |-
                lithium:ZSNsJrPI
                lazydfu
                fabric-api:tFw0iWAk
                ferrite-core
                krypton:jiDwS0W1
                carpet
                ledger:pOxgWfwI
                spark
                chunky
                servertick:IOYJbkmQ
                fabric-language-kotlin:48ri5y9r
                memoryleakfix:dGlflhb6
                cardinal-components-api:qW85eawp
                cloth-config:s7VTKfLA
                travelersbackpack:xoAo10oT
                architectury-api:Sbew3kXe
                simply-swords:EvFZh7u0
                knaves-needs:FH2xrVIB
                playeranimator:yDqYTUaf
                better-combat:Z6wHaEla
                dual-swords:7KDebPb5
              DISABLED_MODS: |- # this is for my reference
                servercore:exA4UxFq # disabled due to the 1.20.1 Fabric version causing mixin launch errors
                tick-stasis # disabled due to kube-probe never succeeding from paused server, have to check if timeout config exists
              SERVER_NAME: "${CONFIG_MINECRAFT_NAME}"
              OPS: "${CONFIG_MINECRAFT_OPS}"
              ICON: "${CONFIG_MINECRAFT_ICON}"
              OVERRIDE_ICON: "TRUE"
              MOTD: "Never waste your diamonds on a hoe! Now on Kubernetes!"
              LEVEL_TYPE: "DEFAULT"
              LEVEL: "world"
              MODE: "survival"
              DIFFICULTY: "normal"
              MAX_WORLD_SIZE: "6e+07"
              MAX_PLAYERS: "20"
              PVP: "true"
              ALLOW_NETHER: "true"
              ANNOUNCE_PLAYER_ACHIEVEMENTS: "true"
              ENABLE_COMMAND_BLOCK: "false"
              FORCE_GAMEMODE: "true"
              GENERATE_STRUCTURES: "true"
              HARDCORE: "false"
              MAX_BUILD_HEIGHT: "256"
              MAX_TICK_TIME: "-1"
              VIEW_DISTANCE: "10"
              OVERRIDE_SERVER_PROPERTIES: "true"
              ENABLE_RCON: "false"
              ENABLE_AUTOPAUSE: "TRUE"
              AUTOPAUSE_SUDO: "false"
              AUTOPAUSE_KNOCK_INTERFACE: "eth0"
              AUTOPAUSE_TIMEOUT_EST: "300"
              AUTOPAUSE_TIMEOUT_INIT: "120"
              RCON_CMDS_STARTUP: |-
                gamerule keepInventory false
              SNOOPER_ENABLED: "false"
              SYNC_CHUNK_WRITES: "false"
              USE_AIKAR_FLAGS: "true"
            resources:
              requests:
                cpu: "100m"
                memory: "3072Mi"
              limits:
                cpu: "2000m"
                memory: "6000Mi"
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  periodSeconds: 60
                  exec: &probeexec {command: ["mc-health"]}
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  initialDelaySeconds: 30
                  periodSeconds: 1
                  failureThreshold: 300
                  exec: *probeexec
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: true
              capabilities:
                drop: ["ALL"]
                add: ["NET_RAW"]
    service:
      main:
        enabled: true
        primary: true
        controller: main
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          coredns.io/hostname: "${APP_DNS_MINECRAFT}"
          "io.cilium/lb-ipam-ips": "${APP_IP_MINECRAFT}"
          tailscale.com/expose: "true"
          tailscale.com/hostname: "mc"
        ports:
          http:
            enabled: false
          minecraft:
            enabled: true
            primary: true
            port: 25565
            protocol: TCP
    persistence:
      data:
        enabled: true
        existingClaim: "minecraft-data"
        globalMounts:
          - path: "/data"
            readOnly: false
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /tmp
            readOnly: false
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: &uid 1000 # must be 1000 for `minecraft` user, so that autopause (`knockd`) can be launched with sudo nopasswd (https://github.com/itzg/docker-minecraft-server/blob/ec539a5dd27ba6e796c6d89975c01a99ce031f4e/files/sudoers-mc)
        # runAsUser: &uid ${APP_UID_MINECRAFT}
        runAsGroup: *uid
        fsGroup: *uid
        runAsNonRoot: true
        seccompProfile: {type: "RuntimeDefault"}
        fsGroupChangePolicy: "Always"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 15
              preference:
                matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: "In"
                    values: ["ange", "charlotte"] # i5-8500T
            - weight: 10
              preference:
                matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: "In"
                    values: ["chise"] # i3-8100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              namespaces: ["minecraft", "minecraft2"]
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: "minecraft2"
                  app.kubernetes.io/instance: "minecraft2"