---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app searxng
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.6.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: "allow"
            egress.home.arpa/mullvad: "allow"
            egress.home.arpa/internet-https: "allow"
        containers:
          main:
            image: &img
              repository: "docker.io/searxng/searxng"
              tag: "latest@sha256:fc0acbfae4b0b99f3c09e9997e723b8683bd6b9451e2c08f0bb555d48cc3b7f7"
            command: ["uwsgi", "--master", "--http-socket", "0.0.0.0:8080", "/usr/local/searxng/dockerfiles/uwsgi.ini"]
            env:
              TZ: "${CONFIG_TZ}"
              UWSGI_WORKERS: &cpu
                valueFrom:
                  resourceFieldRef:
                    containerName: main
                    resource: limits.cpu # not defined, so will use node allocatable
              UWSGI_THREADS: *cpu
            envFrom:
              - secretRef:
                  name: "searxng-secrets"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "50m"
                memory: "1Gi"
              limits:
                memory: "2Gi"
          redis:
            image:
              repository: "public.ecr.aws/docker/library/redis"
              tag: "7.4.1-bookworm@sha256:a06cea905344470eb49c972f3d030e22f28f632c1b4f43bbe4a26a4329dd6be5"
            command: ["redis-server", "--save", "''", "--appendonly", "no", "--port", "0", "--bind", "127.0.0.1", "--unixsocket", "/redis/redis.sock", "--unixsocketperm", "700"] # save and appendonly options forcibly disable RDB and AOF persistence entirely
            securityContext: *sc
            resources:
              requests:
                cpu: "10m"
                memory: "32Mi"
              limits:
                cpu: "1000m"
                memory: "512Mi"
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        primary: true
        className: "nginx-internal"
        hosts:
          - host: &host "${APP_DNS_SEARXNG:=searxng}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts: [*host]
    dnsConfig:
      options:
        - name: ndots
          value: "1"
    persistence:
      config:
        enabled: true
        type: configMap
        name: "searxng-config"
        advancedMounts:
          main:
            main:
              - subPath: "settings.yml"
                path: "/etc/searxng/settings.yml"
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: "redis"
            path: "/redis"
          - subPath: "tmp"
            path: "/tmp"
    configMaps:
      config:
        enabled: true
        data:
          settings.yml: |-
            use_default_settings:
              engines:
                keep_only:
                  - arch linux wiki
                  - google
                  - google images
                  - google news
                  - google videos
                  - google scholar
                  - google play apps
                  - duckduckgo
                  - brave
                  - startpage
                  - gitlab
                  - github
                  - codeberg
                  - sourcehut
                  - bitbucket
                  - apple app store
                  - wikipedia
                  - currency
                  - docker hub
                  - ddg definitions
                  - duckduckgo images
                  - bandcamp
                  - deviantart
                  - tineye
                  - apple maps
                  - fdroid
                  - flickr
                  - free software directory
                  - z-library
                  - lobste.rs
                  - azlyrics
                  - openstreetmap
                  - npm
                  - pypi
                  - lib.rs
                  - nyaa
                  - reddit
                  - sepiasearch
                  - soundcloud
                  - stackoverflow
                  - askubuntu
                  - superuser
                  - searchcode code
                  - unsplash
                  - youtube
                  - wolframalpha
                  - mojeek
            engines:
              - name: brave
                disabled: false
              - name: startpage
                disabled: false
              - name: apple app store
                disabled: false
              - name: ddg definitions
                disabled: false
              - name: tineye
                disabled: false
              - name: apple maps
                disabled: false
              - name: duckduckgo images
                disabled: false
              - name: fdroid
                disabled: false
              - name: free software directory
                disabled: false
              - name: bitbucket
                disabled: false
              - name: gitlab
                disabled: false
              - name: codeberg
                disabled: false
              - name: google play apps
                disabled: false
              - name: lobste.rs
                disabled: false
              - name: azlyrics
                disabled: false
              - name: npm
                disabled: false
              - name: nyaa
                disabled: false
                categories: videos
              - name: searchcode code
                disabled: false
              - name: mojeek
                disabled: false
              - name: lib.rs
                disabled: false
              - name: sourcehut
                disabled: false
            general:
              instance_name: "JJGadgets Search"
              enable_metrics: false
            brand:
              new_issue_url: ""
              docs_url: ""
              public_instances: ""
              wiki_url: ""
              issue_url: ""
            search:
              safe_search: 0
              default_lang: "en"
              max_page: 0
            server:
              bind_address: "0.0.0.0"
              port: 8080
              base_url: "https://${APP_DNS_SEARXNG}/"
              image_proxy: true
              http_protocol_version: "1.1"
              method: "GET"
            outgoing:
              extra_proxy_timeout: 30
              proxies:
                all://:
                  - socks5://10.64.0.1:1080
            ui:
              static_use_hash: true
              infinite_scroll: true
              default_theme: "simple"
              theme_args:
                simple_style: "dark"
            enabled_plugins:
              - 'Hash plugin'
              - 'Search on category select'
              - 'Self Information'
              - 'Tracker URL remover'
              - 'Open Access DOI rewrite'
              - 'Vim-like hotkeys'
              - 'Hostname replace'
            hostname_replace:
              '(.*\.)?youtube\.com$': '${APP_DNS_PIPED_FRONTEND}'
              '(.*\.)?youtu\.be$': '${APP_DNS_PIPED_FRONTEND}'
              '(.*\.)?reddit\.com$': '${APP_DNS_LIBREDDIT}'
              '(.*\.)?redd\.it$': '${APP_DNS_LIBREDDIT}'
              '(.*\.)?medium\.com$': 'scribe.rip'
            redis:
              url: "unix:///redis/redis.sock?db=0"
    # NOTE: Search engines disabled:
    # - archive.is (too many requests)
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 977 # upstream `searxng` user
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      dnsConfig: # avoid flooding Cilium dnsproxy
        options:
          - name: ndots
            value: "1"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/searxng"
                    operator: "DoesNotExist"
