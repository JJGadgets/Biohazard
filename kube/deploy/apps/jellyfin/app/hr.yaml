---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app jellyfin
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.5.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: "allow"
            egress.home.arpa/internet: "allow"
            egress.home.arpa/dlna: "allow"
            authentik.home.arpa/ldap: "allow"
            egress.home.arpa/r2: "allow"
            tailscale.com/expose: "true"
        containers:
          main:
            image: &img
              repository: "docker.io/jellyfin/jellyfin"
              tag: "10.8.13-1@sha256:095e6d410d1d27b17cc4a961a9bab9fab5ffce6e49389d8ec685f65ab5538525"
            env:
              TZ: "${CONFIG_TZ}"
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
                memory: "2Gi"
              limits:
                cpu: "3000m"
                memory: "6Gi"
                gpu.intel.com/i915: "1"
    service:
      main:
        ports:
          http:
            port: 8096
    ingress:
      main:
        enabled: true
        primary: true
        className: "nginx-internal"
        hosts:
          - host: &host "${APP_DNS_JELLYFIN}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts: [*host]
      tailscale:
        enabled: true
        primary: false
        className: "tailscale"
        hosts:
          - host: &host "${APP_DNS_JELLYFIN_TS}"
            paths: *paths
        tls:
          - hosts: [*host]
    persistence:
      config:
        enabled: true
        existingClaim: "jellyfin-data"
        globalMounts:
          - path: "/config"
      nfs:
        enabled: true
        type: nfs
        server: "${IP_TRUENAS}"
        path: "${PATH_NAS_MEDIA}"
        globalMounts:
          - path: "/media"
            readOnly: true
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: "tmp"
            path: "/tmp"
          - subPath: "transcode"
            path: "/transcode"
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 568
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        supplementalGroups: [
          44, 104, 109, # GPU
          6969 # NAS
        ]
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/jellyfin"
                    operator: "DoesNotExist"
