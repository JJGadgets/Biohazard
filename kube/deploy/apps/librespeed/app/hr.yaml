---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.6.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app librespeed
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      librespeed:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-external: allow
        containers:
          main:
            image: &img
              repository: ghcr.io/librespeed/speedtest-rust
              tag: v1.3.7@sha256:98902fbc9f188a71e77fb687027e5f9ba4dcc65e6501b213257c954e5e13a219
            env: &env
              TZ: "${CONFIG_TZ}"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "1"
                memory: "128Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      librespeed:
        controller: librespeed
        ports:
          http:
            port: 8080
            protocol: HTTP
            appProtocol: http
    ingress:
      main:
        className: nginx-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "${DNS_CF:=cf}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host "${APP_DNS_LIBRESPEED:=librespeed}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  identifier: librespeed
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      config:
        type: configMap
        name: librespeed-config
        advancedMounts:
          librespeed:
            main:
              - subPath: configs.toml
                path: /usr/local/bin/configs.toml
    configMaps:
      config:
        enabled: true
        data:
          configs.toml: |-
            bind_address="0.0.0.0"
            listen_port=8080
            worker_threads=1 # or auto
            redact_ip_addresses=true
            result_image_theme="dark"
            database_type="none"
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/librespeed
                    operator: DoesNotExist
