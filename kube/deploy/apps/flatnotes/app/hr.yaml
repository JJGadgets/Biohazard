---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app flatnotes
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      flatnotes:
        type: deployment
        replicas: 1
        strategy: RollingUpdate
        pod:
          labels:
            ingress.home.arpa/nginx-internal: allow
        containers:
          main:
            image: &img
              repository: docker.io/dullage/flatnotes
              tag: v5.5.4@sha256:a509830073d6548d35450a98be3a432716430b674cc70ac93cbbaed1555b5a28
            env: &env
              TZ: "${CONFIG_TZ}"
              FLATNOTES_PORT: &http 8080
              FLATNOTES_PATH: &pvc /data
              FLATNOTES_AUTH_TYPE: totp
            envFrom: &envFrom
              - secretRef:
                  name: flatnotes-secrets
            securityContext: &sc
              # readOnlyRootFilesystem: true # init changes href in index.html
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "1"
                memory: "512Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      flatnotes:
        controller: flatnotes
        ports:
          http:
            port: *http
            protocol: HTTP
            appProtocol: http
    ingress:
      main:
        className: nginx-internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "${IP_JJ_V4:=127.0.0.1/32}"
        hosts:
          - host: &host "${APP_DNS_FLATNOTES:=flatnotes}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  identifier: flatnotes
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      data:
        existingClaim: flatnotes-data
        globalMounts:
          - subPath: data
            path: *pvc
      index:
        existingClaim: flatnotes-misc
        globalMounts:
          - subPath: index
            path: /data/.flatnotes
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/flatnotes
                    operator: DoesNotExist
