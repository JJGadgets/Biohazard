---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app renovate
  namespace: *app
spec:
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: cronjob
        replicas: 1
        cronjob:
          concurrencyPolicy: Forbid
          schedule: "@hourly"
        pod:
          labels:
            egress.home.arpa/world: "allow"
        containers:
          main:
            image:
              repository: "ghcr.io/renovatebot/renovate"
              tag: "37.140.16@sha256:b8dd77d3276186d81f1870a5542a937b564d8e2ce8fffac117eac86d55ec8f27"
            args: ["JJGadgets/Biohazard"] # TODO: use only on main home-prod GitOps repo first
            env:
              TZ: "${CONFIG_TZ}"
              LOG_LEVEL: "debug"
              RENOVATE_DRY_RUN: "false"
              RENOVATE_REBASE_WHEN: "behind-base-branch"
              RENOVATE_PLATFORM: "github"
              RENOVATE_PLATFORM_COMMIT: "true" # use GitHub API to commit so GitHub.com commit signing on behalf of GitHub App can be done
              RENOVATE_AUTODISCOVER: "true"
              RENOVATE_AUTODISCOVER_FILTER: "JJGadgets/Biohazard"
              # RENOVATE_REPOSITORIES: "JJGadgets/Biohazard"
              RENOVATE_USERNAME: "tinfoild[bot]"
              RENOVATE_GIT_AUTHOR: "tinfoild <${SECRET_RENOVATE_GITHUB_APP_API_ID}+tinfoild[bot]@users.noreply.github.com>"
              RENOVATE_CONFIG_FILE: "/config/config.json"
              RENOVATE_BASE_DIR: "/data"
            envFrom:
              - secretRef:
                  name: "renovate-secrets"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                cpu: 750m # 3/4 of a core at most
                memory: 6000Mi
        initContainers:
          01-github-app-generate-token:
            imagePullPolicy: "IfNotPresent"
            image:
              repository: "ghcr.io/mshekow/github-app-installation-token"
              tag: "2023.12.20@sha256:a4855b44ce224e7e31b8e649ccb42e1129f27199c1db00006afc5179086a56d9"
            command: ["/bin/sh", "-c", "node index.js ${SECRET_RENOVATE_GITHUB_APP_APP_ID} ${SECRET_RENOVATE_GITHUB_APP_INSTALL_ID} /privkey | tee /config/RENOVATE_TOKEN"]
            securityContext: *sc
          02-config:
            imagePullPolicy: "IfNotPresent"
            image:
              repository: "docker.io/mikefarah/yq"
              tag: "4.40.5@sha256:32be61dc94d0acc44f513ba69d0fc05f1f92c2e760491f2a27e11fc13cde6327"
            command: ["/bin/sh", "-c", "RENOVATE_TOKEN=$(cat /config/RENOVATE_TOKEN) yq eval --output-format json --null-input '.token = env(RENOVATE_TOKEN)' | tee /config/config.json"]
            securityContext: *sc
    service:
      main:
        enabled: false
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        size: "10Gi"
        storageClass: "block"
        accessMode: "ReadWriteOnce"
        retain: true
        globalMounts:
          - path: "/data"
            readOnly: false
      # TODO: add either Redis or PVC to cache e.g. index.docker.io to alleviate rate limits
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: "renovate"
            path: "/tmp"
            readOnly: false
          - subPath: "config"
            path: "/config"
            readOnly: false
      github-app-privkey:
        enabled: true
        type: secret
        name: "renovate-secrets"
        defaultMode: 0400
        advancedMounts:
          main:
            01-github-app-generate-token:
              - subPath: "github-app-privkey"
                path: "/privkey"
                readOnly: true
    dnsConfig:
      options:
        - name: ndots
          value: "1"
    defaultPodOptions:
      restartPolicy: "Never" # cronjob
      automountServiceAccountToken: false
      securityContext:
        runAsUser: &uid ${APP_UID_RENOVATE}
        runAsGroup: *uid
        fsGroup: *uid
        runAsNonRoot: false
        seccompProfile: {type: "RuntimeDefault"}
        fsGroupChangePolicy: Always
