---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app findmydeviceserver
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.5.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: "allow"
        containers:
          main:
            image: &img
              repository: "jank.ing/jjgadgets/findmydeviceserver-master"
              tag: "rolling"
            env:
              TZ: "${CONFIG_TZ}"
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
                memory: "128Mi"
              limits:
                cpu: "3000m"
                memory: "6000Mi"
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        primary: true
        className: "nginx-external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "${DNS_SHORT_CF}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host "${APP_DNS_FINDMYDEVICESERVER}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      config:
        enabled: true
        type: secret
        name: "findmydeviceserver-secrets"
        advancedMounts:
          main:
            main:
              - subPath: "config.yaml"
                path: "/fmd/config.yml"
                readOnly: true
      data:
        enabled: true
        existingClaim: "findmydeviceserver-data"
        globalMounts:
          - subPath: "objectbox"
            path: "/fmd/objectbox"
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid ${APP_UID_FINDMYDEVICESERVER}
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/findmydeviceserver"
                    operator: "DoesNotExist"
