---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app navidrome
  namespace: media
  labels:
    nginx.ingress.home.arpa/type: auth
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      navidrome:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: allow
            prom.home.arpa/kps: allow
            # egress.home.arpa/internet: allow
          annotations:
            fluentbit.io/parser: "logfmt"
        containers:
          main:
            image: &img
              repository: ghcr.io/navidrome/navidrome
              tag: 0.57.0@sha256:d753f3f0ba65d838d288e58c2cb1254a519f439b88fa0fa8378178f5e8b17587
            env:
              TZ: "${CONFIG_TZ}"
              ND_BASEURL: "https://${APP_DNS_NAVIDROME}"
              ND_MUSICFOLDER: "/media"
              ND_DATAFOLDER: "/data"
              ND_CACHEFOLDER: "/data/cache"
              ND_PORT: &http 8080
              ND_COVERJPEGQUALITY: "100"
              ND_DEFAULTTHEME: Dark
              ND_ENABLEGRAVATAR: "false"
              ND_IMAGECACHESIZE: "1GB"
              ND_TRANSCODINGCACHESIZE: 5GB
              ND_SEARCHFULLSTRING: "true"
              ND_SUBSONICARTISTPARTICIPATIONS: "true"
              ND_ENABLETRANSCODINGCONFIG: "${CONFIG_NAVIDROME_TRANSCODE_UI:=false}"
              ND_UILOGINBACKGROUNDURL: https://raw.githubusercontent.com/JJGadgets/images/main/cover.png
              ND_UIWELCOMEMESSAGE: "Welcome to JJGadgets Music."
              ND_PROMETHEUS_ENABLED: "true"
              ND_PROMETHEUS_METRICSPATH: &metrics /metrics
              ND_REVERSEPROXYUSERHEADER: X-authentik-username
              ND_REVERSEPROXYWHITELIST: "${IP_POD_CIDR_V4:=127.0.0.1/32},127.0.0.1/32,::1/128"
              ND_ENABLEINSIGHTSCOLLECTOR: "false"
              ND_LISTENBRAINZ_ENABLED: "true"
              ND_LISTENBRAINZ_BASEURL: "http://maloja.maloja.svc.cluster.local/apis/listenbrainz/1/"
            envFrom: &envFrom
              - secretRef:
                  name: navidrome-secrets
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "1"
                memory: "200Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
          edit:
            image: &img
              repository: ghcr.io/home-operations/beets
              tag: 2.3.1@sha256:cc4975f1a0be4e238d29fe13c18ce37e08964af0d5ceb1811485751b6490bcaf
            command: ["/usr/bin/catatonit", "--", "/usr/bin/env", "sh", "-c", "sleep infinity"] # just the CLI ma'am, just the CLI
            env:
              TZ: "${CONFIG_TZ}"
            envFrom: &envFrom
              - secretRef:
                  name: navidrome-secrets
            securityContext: &sc
              runAsUser: 65534
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "0m"
                memory: "0Mi"
              limits:
                cpu: "2"
                memory: "2Gi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      navidrome:
        controller: navidrome
        type: LoadBalancer # TODO: tmp to test Amperfy song restart bug https://github.com/BLeeEZ/amperfy/issues/305
        annotations:
          coredns.io/hostname: "svc-${APP_DNS_NAVIDROME:=${APPNAME}}"
          "io.cilium/lb-ipam-ips": "${APP_IP_NAVIDROME:=127.0.0.1}"
        ports:
          http:
            port: 80
            targetPort: *http
            protocol: HTTP
            appProtocol: http
    ingress:
      main:
        className: nginx-internal
        annotations:
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://${APP_DNS_NAVIDROME}/outpost.goauthentik.io/start?rd=$escaped_request_uri
        hosts:
          - host: &host "${APP_DNS_NAVIDROME:=navidrome}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: navidrome
                  port: http
        tls:
          - hosts: [*host]
      subsonic: # bypass forward auth
        className: nginx-internal
        hosts:
          - host: &host "${APP_DNS_NAVIDROME:=navidrome}"
            paths:
              - &path
                path: /rest
                pathType: Prefix
                service:
                  identifier: navidrome
                  port: http
              - <<: *path
                path: /auth
        tls:
          - hosts: [*host]
    persistence:
      data:
        existingClaim: navidrome-data
        globalMounts:
          - subPath: data
            path: /data
      media:
        existingClaim: media-data
        advancedMounts:
          navidrome:
            edit:
              - &mount
                subPath: Music
                path: /media/ceph
            main:
              - <<: *mount
                readOnly: true
      bulk:
        existingClaim: media-bulk
        advancedMounts:
          navidrome:
            edit:
              - subPath: music-edit-venv
                path: /config/.venv
      nfs:
        type: nfs
        server: "${IP_TRUENAS:=127.0.0.1}"
        path: "${PATH_NAS_MEDIA:=/media}"
        advancedMounts:
          navidrome:
            edit:
              - &mount
                subPath: Music
                path: /media/nfs
            main:
              - <<: *mount
                readOnly: true
      tmp:
        type: emptyDir
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      hostAliases:
        - ip: "${APP_IP_AUTHENTIK:=127.0.0.1}"
          hostnames: ["${APP_DNS_AUTHENTIK:=authentik}"]
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostUsers: true
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 6969
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/navidrome
                    operator: DoesNotExist
    serviceMonitor:
      main:
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: *metrics
    networkpolicies:
      maloja:
        controller: navidrome
        policyTypes: [Egress]
        rules:
          egress:
            - to:
                - podSelector:
                    matchLabels:
                      app.kubernetes.io/name: maloja
                  namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: maloja
