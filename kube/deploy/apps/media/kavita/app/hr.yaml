---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kavita
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: "2.6.0"
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: "allow"
            egress.home.arpa/internet: "allow" # metadata fetching
        containers:
          main:
            image: &img
              repository: "ghcr.io/kareadita/kavita"
              tag: "0.8.4@sha256:07393ed7d6860e7312c0197b8c1ebcd4d53c52b7cabd542db08613410ff22c69"
            env:
              TZ: "${CONFIG_TZ}"
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "20m"
                memory: "250Mi"
              limits:
                cpu: "3000m"
                memory: "1Gi"
    service:
      main:
        ports:
          http:
            port: 5000
    ingress:
      main:
        enabled: true
        primary: true
        className: "nginx-internal"
        hosts:
          - host: &host "${APP_DNS_KAVITA:=kavita}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      config:
        enabled: true
        existingClaim: "kavita-config"
        globalMounts:
          - path: "/kavita/config"
      nas:
        enabled: true
        type: nfs
        server: "${IP_TRUENAS:=127.0.0.1}"
        path: "${PATH_NAS_MEDIA:=/kavita}"
        globalMounts:
          - path: "/nas"
            readOnly: true
      media:
        enabled: true
        existingClaim: "media-data" # VolSync
        globalMounts:
          - path: "/media"
            readOnly: true
      bulk:
        enabled: true
        existingClaim: "media-bulk" # no backups
        globalMounts:
          - path: "/bulk"
            readOnly: true
      backups:
        enabled: true
        type: nfs
        server: "${IP_TRUENAS:=127.0.0.1}"
        path: "${PATH_NAS_BACKUPS_K8S:=/backups}"
        globalMounts:
          - subPath: "kavita"
            path: "/kavita/config/backups"
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: "tmp"
            path: "/tmp"
            readOnly: false
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 6969
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "fuckoff.home.arpa/kavita"
                    operator: "DoesNotExist"
