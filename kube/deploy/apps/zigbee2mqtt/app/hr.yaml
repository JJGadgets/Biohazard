---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.6.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app zigbee2mqtt
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      zigbee2mqtt:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-internal: allow
            egress.home.arpa/iot: allow
            db.home.arpa/emqx: emqx
        containers:
          main:
            image: &img
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 2.0.0@sha256:6105a3a01a66bbfb98909a7c309d0707ec7b41728ac15d399747077225231545
            env: &env
              TZ: "${CONFIG_TZ}"
              ZIGBEE2MQTT_DATA: /config
              ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: ISO_8601
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: info # debug
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'
              # ZIGBEE2MQTT_CONFIG_ADVANCED_TRANSMIT_POWER: 20
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT: 60
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT: 2000
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN: true
              ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API: true
              ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: &port 80
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://${APP_DNS_ZIGBEE2MQTT}
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_ENABLED: true
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_DISCOVERY_TOPIC: homeassistant
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_STATUS_TOPIC: homeassistant/status
              ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: true
              ZIGBEE2MQTT_CONFIG_MQTT_KEEPALIVE: 60
              ZIGBEE2MQTT_CONFIG_MQTT_REJECT_UNAUTHORIZED: true
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtts://${APP_DNS_EMQX}:8883
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 5
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: false
              ZIGBEE2MQTT_CONFIG_SERIAL_BAUDRATE: 115200
              ZIGBEE2MQTT_CONFIG_SERIAL_DISABLE_LED: false
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: tcp://slzb.internal:6638
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: zstack
            envFrom: &envFrom
              - secretRef:
                  name: zigbee2mqtt-secrets
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
                add: ["NET_BIND_SERVICE"]
            # resources:
            #   requests:
            #     cpu: "10m"
            #   limits:
            #     memory: "256Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 300
                  periodSeconds: 1
                  initialDelaySeconds: 10
          litestream: &ls
            image:
              repository: "docker.io/litestream/litestream"
              tag: "0.3.13@sha256:027eda2a89a86015b9797d2129d4dd447e8953097b4190e1d5a30b73e76d8d58"
            args: ["replicate"]
            envFrom:
              - secretRef:
                  name: litestream-secrets
            env: &lsenv
              DB_PATH: "/config/database.db"
              REMOTE_PATH: "zigbee2mqtt/database"
              VALIDATION_INTERVAL: "24h"
              AGE_PUBKEY:
                valueFrom:
                  secretKeyRef:
                    name: "litestream-agekey"
                    key: "AGE_PUBKEY"
              AGE_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: "litestream-agekey"
                    key: "AGE_SECRET"
            securityContext: *sc
        initContainers:
          01-litestream-restore:
            <<: *ls
            args: ["restore", "-if-db-not-exists", "-if-replica-exists", "/config/database.db"]
            env: *lsenv
    service:
      zigbee2mqtt:
        controller: zigbee2mqtt
        ports:
          http:
            port: *port
            protocol: HTTP
            appProtocol: http
    ingress:
      main:
        className: nginx-internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "${IP_JJ_V4}"
        hosts:
          - host: &host "${APP_DNS_ZIGBEE2MQTT:=zigbee2mqtt}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  identifier: zigbee2mqtt
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      data:
        existingClaim: zigbee2mqtt-data
        globalMounts:
          - subPath: data
            path: /config
      tmp:
        type: emptyDir
        medium: Memory
        sizeLimit: 16Mi
        globalMounts:
          - subPath: configlog
            path: /config/log
      litestream:
        type: secret
        name: "litestream-secrets"
        advancedMounts:
          zigbee2mqtt:
            litestream: &lsmnt
              - subPath: "litestream.yml"
                path: "/etc/litestream.yml"
                readOnly: true
            01-litestream-restore: *lsmnt
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/zigbee2mqtt
                    operator: DoesNotExist
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
              name: zigbee2mqtt
            patch: |
              - op: add
                path: "/spec/template/spec/resources"
                value:
                  requests:
                    cpu: 30m
                  limits:
                    cpu: 1
                    memory: 256Mi
