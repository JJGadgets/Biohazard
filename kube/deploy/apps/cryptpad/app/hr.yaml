---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cryptpad
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      cryptpad:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-external: allow
            authentik.home.arpa/https: allow
            egress.home.arpa/github: allow
        containers:
          main:
            image: &img
              repository: docker.io/cryptpad/cryptpad
              tag: version-2024.12.0@sha256:a8f075b1a5f9ebb3f28944fa474028c43b8ac2c2513f898c8c78c58f25be8df7
            command: ["npm", "start"]
            env: &env
              TZ: "${CONFIG_TZ}"
              GIT_CONFIG_GLOBAL: &gitc "/tmp/.gitconfig"
              GIT_CONFIG_SYSTEM: *gitc
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "1"
                memory: "512Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
        initContainers:
          01-install-onlyoffice:
            image: *img
            env: *env
            command: ["/cryptpad/install-onlyoffice.sh", "--accept-license", "--trust-repository"]
            securityContext: *sc
          02-install-plugin-sso:
            image: *img
            env:
              # renovate: datasource=github-tags depName=cryptpad/sso
              SSO_VERSION: "0.3.0"
            command: ["/usr/bin/env", "bash", "-c"]
            args:
              - |
                cd /cryptpad/lib/plugins
                git clone --depth 1 --branch $(SSO_VERSION) https://github.com/cryptpad/sso || cd sso; git pull
            securityContext: *sc
          99-npm-build:
            image: *img
            env: *env
            command: ["npm", "run", "build"]
            securityContext: *sc
    service:
      cryptpad:
        controller: cryptpad
        ports:
          http:
            port: 3000
            protocol: HTTP
            appProtocol: http
          ws:
            port: 3003
            protocol: HTTP
            appProtocol: http
    ingress:
      main:
        className: nginx-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "${DNS_CF:=cf}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host "${APP_DNS_CRYPTPAD:=cryptpad}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  identifier: cryptpad
                  port: http
              - path: /cryptpad_websocket
                pathType: Prefix
                service:
                  identifier: cryptpad
                  port: ws
          - host: &hostSafe "${APP_DNS_CRYPTPAD_SAFE:=cryptpad}"
            paths: *paths
        tls:
          - hosts: [*host, *hostSafe]
    persistence:
      config:
        type: secret
        name: cryptpad-secrets
        globalMounts:
          - subPath: config.js
            path: /cryptpad/config/config.js
          - subPath: sso.js
            path: /cryptpad/config/sso.js
      data:
        existingClaim: cryptpad-data
        globalMounts:
          - subPath: data
            path: /cryptpad/data
          - subPath: blob
            path: /cryptpad/blob
          - subPath: block
            path: /cryptpad/block
          - subPath: customize
            path: /cryptpad/customize
          - subPath: files
            path: /cryptpad/datastore
          - subPath: plugins
            path: /cryptpad/lib/plugins
          - subPath: onlyoffice-dist
            path: /cryptpad/www/common/onlyoffice/dist
          - subPath: onlyoffice-conf
            path: /cryptpad/onlyoffice-conf
      tmp:
        type: emptyDir
        medium: Memory
        sizeLimit: 100Mi
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      hostAliases:
        - ip: "${APP_IP_AUTHENTIK:=127.0.0.1}"
          hostnames: ["${APP_DNS_AUTHENTIK:=authentik}"]
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 4001 # upstream `cryptpad` user
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/cryptpad
                    operator: DoesNotExist
