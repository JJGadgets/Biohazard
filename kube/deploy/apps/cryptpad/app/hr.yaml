---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.4.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cryptpad
  namespace: *app
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      app:
        type: deployment
        replicas: 1
        pod:
          labels:
            ingress.home.arpa/nginx-external: allow
            authentik.home.arpa/https: allow
            egress.home.arpa/github: allow # will be de-escalated
            egress.home.arpa/apiserver: allow # will be de-escalated
        serviceAccount:
          identifier: app
        containers:
          app:
            image: &img
              repository: docker.io/cryptpad/cryptpad
              tag: version-2025.9.0@sha256:353d98ac893158b699dcf345b6c8271dea9200d1015a9d367441625c046486e4
            command: ["npm", "start"]
            env: &env
              TZ: "${CONFIG_TZ}"
              GIT_CONFIG_GLOBAL: &gitc "/tmp/.gitconfig"
              GIT_CONFIG_SYSTEM: *gitc
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                cpu: "1"
                memory: "512Mi"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
        initContainers:
          01-install-onlyoffice:
            image: *img
            env: *env
            command: ["/cryptpad/install-onlyoffice.sh", "--accept-license", "--trust-repository"]
            securityContext: *sc
          02-install-plugin-sso:
            image: *img
            env:
              # renovate: datasource=github-tags depName=cryptpad/sso
              SSO_VERSION: "0.4.0"
            command: ["/usr/bin/env", "bash", "-c"]
            args:
              - |
                cd /cryptpad/lib/plugins
                git clone --no-checkout --filter=tree:0 --depth 1 https://github.com/cryptpad/sso || true
                cd sso
                git fetch --depth 1 origin $(SSO_VERSION)
                git checkout FETCH_HEAD
            securityContext: *sc
          03-npm-build:
            image: *img
            env: *env
            command: ["npm", "run", "build"]
            securityContext: *sc
          99-de-escalate-netpols:
            image:
              repository: registry.k8s.io/kubectl
              tag: v1.34.0@sha256:497d298f891edb7608dfce9dae4bb08dffc4ddcd7f5d24a0512d4bbf33e04f26
            command: ["kubectl", "label", "pods", "--namespace", "$(POD_NS)", "$(POD_NAME)", "egress.home.arpa/github-", "egress.home.arpa/apiserver-"]
            env:
              <<: *env
              POD_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              POD_NS:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
    service:
      app:
        controller: app
        ports:
          http:
            port: 3000
            protocol: HTTP
            appProtocol: http
          ws:
            port: 3003
            protocol: HTTP
            appProtocol: http
    ingress:
      app:
        className: nginx-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "${DNS_CF:=cf}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host "${APP_DNS_CRYPTPAD:=cryptpad}"
            paths: &paths
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
              - path: /cryptpad_websocket
                pathType: Prefix
                service:
                  identifier: app
                  port: ws
          - host: &hostSafe "${APP_DNS_CRYPTPAD_SAFE:=cryptpad}"
            paths: *paths
        tls:
          - hosts: [*host, *hostSafe]
    persistence:
      config:
        type: secret
        name: cryptpad-secrets
        globalMounts:
          - subPath: config.js
            path: /cryptpad/config/config.js
          - subPath: sso.js
            path: /cryptpad/config/sso.js
      data:
        existingClaim: cryptpad-data
        globalMounts:
          - subPath: data
            path: /cryptpad/data
          - subPath: blob
            path: /cryptpad/blob
          - subPath: block
            path: /cryptpad/block
          - subPath: customize
            path: /cryptpad/customize
          - subPath: files
            path: /cryptpad/datastore
          - subPath: plugins
            path: /cryptpad/lib/plugins
          - subPath: onlyoffice-dist
            path: /cryptpad/www/common/onlyoffice/dist
          - subPath: onlyoffice-conf
            path: /cryptpad/onlyoffice-conf
      # sso:
      #   type: image
      #   image:
      #     repository: jank.ing/jjgadgets/cryptpad-sso
      #     tag: 0.4.0@sha256:1974fc6c27cc632aedcaac6efb9a0a415fd34777319c65a7e2644f76d894d1f7
      #   globalMounts:
      #     - subPath: cryptpad/lib/plugins/sso
      #       path: /cryptpad/lib/plugins/sso
      tmp:
        type: emptyDir
        medium: Memory
        sizeLimit: 100Mi
      serviceAccount:
        type: custom
        volumeSpec:
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 600
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
        advancedMounts:
          app:
            99-de-escalate-netpols:
              - path: /var/run/secrets/kubernetes.io/serviceaccount
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      hostAliases:
        - ip: "${APP_IP_AUTHENTIK:=127.0.0.1}"
          hostnames: ["${APP_DNS_AUTHENTIK:=authentik}"]
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 4001 # upstream `cryptpad` user
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fuckoff.home.arpa/{{ .Release.Name }}
                    operator: DoesNotExist
    serviceAccount:
      app: {}
    rbac:
      roles:
        app:
          type: Role
          rules:
            - apiGroups: [""]
              resources: ["pods"]
              verbs: ["get", "list", "patch", "update", "watch"]
              # resourceNames: ["cryptpad-0"] # MutatingAdmissionPolicy will handle this
      bindings:
        app:
          type: RoleBinding
          roleRef:
            kind: Role
            identifier: app
          subjects:
            - kind: ServiceAccount
              identifier: app
