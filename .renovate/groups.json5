{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "packageRules": [
    // NOTE: Renovate processes rules from top to bottom, so the rules below take precedence over rules above it
    {
      "description": "Default options",
      "rebaseWhen": "conflicted",
      "automerge": false
    },
    {
      "description": "Auto merge Github Actions",
      "matchManagers": ["github-actions"],
      "automerge": true,
      "automergeType": "pr",
      "rebaseWhen": "behind-base-branch",
      "ignoreTests": true,
      "matchUpdateTypes": ["minor", "patch", "digest"]
    },
    {
      "description": "Auto merge all Renovate versions",
      "matchPackagePatterns": ["renovate"],
      "matchUpdateTypes": ["major", "minor", "patch", "digest"],
      "automerge": true,
      "automergeType": "branch",
      "ignoreTests": true,
      "labels": ["renovate-itself"]
    },
    {
      "description": "Auto merge apps in path ./kube/deploy/apps (these apps don't affect the entire Kubernetes cluster)",
      // "matchDatasources": ["docker"],
      "automerge": true,
      "automergeType": "pr",
      "rebaseWhen": "behind-base-branch",
      "matchFileNames": ["kube/deploy/apps/**"],
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "matchCurrentVersion": "!/^0\\./", // avoid breaking changes in 0.x SemVer releases
      "labels": ["kube-deploy-apps"]
    },
    {
      "description": "Don't auto merge specific apps in path ./kube/deploy/apps",
      "matchPackagePatterns": ["reactive-resume", "home-assistant"],
      "automerge": false,
      "matchFileNames": ["kube/deploy/apps/**"],
      "labels": ["kube-deploy-apps"]
    },
    {
      "description": "Cilium Group",
      "groupName": "Cilium",
      "matchPackagePatterns": ["cilium"],
      "versioning": "semver",
      "sourceUrl": "https://github.com/cilium/cilium",
      "separateMinorPatch": true,
      "pinDigests": false,
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": "Flux Group",
      "groupName": "Flux",
      "matchPackagePatterns": ["fluxcd"],
      "matchDatasources": ["docker", "github-tags"],
      "versioning": "semver",
      "separateMinorPatch": true,
      "sourceUrl": "https://github.com/fluxcd/flux2",
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": "Flux Group (Automerge Patch)",
      "groupName": "Flux",
      "matchPackagePatterns": ["fluxcd"],
      "matchDatasources": ["docker", "github-tags"],
      "versioning": "semver",
      "separateMinorPatch": true,
      "matchUpdateTypes": ["patch"],
      "automerge": true,
      "automergeType": "pr",
      "rebaseWhen": "behind-base-branch",
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": "authentik Group",
      "groupName": "authentik",
      "matchPackagePatterns": ["authentik"],
      "labels": ["authentik"],
      "sourceUrl": "https://github.com/goauthentik/authentik",
      "automerge": false,
      "separateMultipleMajor": true,
      "separateMinorPatch": true,
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": "Immich Group",
      "groupName": "Immich",
      "matchPackagePatterns": ["immich"],
      "versioning": "semver",
      "sourceUrl": "https://github.com/immich-app/immich",
      "separateMinorPatch": true,
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": "Manually approve app-template major releases",
      "matchPackagePatterns": ["app-template"],
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "dependencyDashboardApproval": true,
      "automerge": false,
      "separateMajorMinor": true,
      "separateMultipleMajor": true,
      "separateMinorPatch": true,
      "groupName": "app-template-major",
      "commitMessagePrefix": "feat(app-template/major)!: ",
      "labels": ["app-template", "major"]
    },
    {
      "description": "Auto merge patch app-template versions",
      "matchPackagePatterns": ["app-template"],
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "dependencyDashboardApproval": false,
      "automerge": true,
      "automergeType": "pr",
      "rebaseWhen": "behind-base-branch",
      "separateMajorMinor": true,
      "separateMultipleMajor": true,
      "separateMinorPatch": true,
      "groupName": "app-template-patch",
      "commitMessagePrefix": "fix(app-template/patch): ",
      "labels": ["app-template", "patch"]
    },
    {
      "description": "Don't automerge app-template minor releases",
      "matchPackagePatterns": ["app-template"],
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "dependencyDashboardApproval": false,
      "automerge": false,
      "separateMajorMinor": true,
      "separateMultipleMajor": true,
      "separateMinorPatch": true,
      "groupName": "app-template-minor",
      "commitMessagePrefix": "feat(app-template/minor): ",
      "labels": ["app-template", "major"]
    },
    {
      "description": "Miniflux enforce distroless images",
      "matchPackagePatterns": ["miniflux"],
      "matchDatasources": ["docker"],
      "versioning": "semver",
      "versionCompatibility": "^(?<version>[^-]+)(?<compatibility>-.*)?$"
    },
    // {
    //   "description": "SearXNG versioning",
    //   "matchPackagePatterns": ["searxng"],
    //   "matchDatasources": ["docker"],
    //   "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(:?<hash>.*)$"
    // },
    {
      "description": "Configure more granular control for apps in ./kube/deploy/core",
      "matchFileNames": ["kube/deploy/core/**"],
      "automerge": false, // enforce no automerge
      "separateMultipleMajor": true,
      "separateMinorPatch": true,
      "labels": ["kube-deploy-core"]
    },
    {
      "description": "Auto merge my own images with release dates as versions, these are images I couldn't think of a better way to do versioning because of too many moving parts",
      "matchPackagePatterns": ["jjgadgets/k8s-crd-extractor"],
      "matchUpdateTypes": ["major", "minor", "patch", "digest"],
      "automerge": true,
      "automergeType": "branch"
    }
  ]
}
